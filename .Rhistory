angle_col = 315,
fontsize = 6,
fontsize_row = 9,
fontsize_col = 9,
annotation_row = ann_rows,
annotation_colors = ann_colors,
cluster_rows = F,
cluster_cols = F,
gaps_row = c(16, 26, 36),
filename = "FinalFigs/Figure6.png",
width = 5,
height = 7)
dev.off()
#### _CH4 ####
# CH4 by salt and experiment
# Stats
leveneTest(CH4_ug_m2_h ~ Salt, data = sf$map_loaded)
shapiro.test(sf$map_loaded$CH4_ug_m2_h)
t.test(CH4_ug_m2_h ~ Salt, data = sf$map_loaded) # Sig.
wilcox.test(CH4_ug_m2_h ~ Salt, data = sf$map_loaded) # Sig.
leveneTest(CH4_ug_m2_h ~ Salt, data = sc$map_loaded)
shapiro.test(sc$map_loaded$CH4_ug_m2_h)
t.test(CH4_ug_m2_h ~ Salt, data = sc$map_loaded) # Sig.
wilcox.test(CH4_ug_m2_h ~ Salt, data = sc$map_loaded) # Sig.
leveneTest(CH4_ug_m2_h ~ Salt, data = detra$map_loaded)
shapiro.test(detra$map_loaded$CH4_ug_m2_h)
t.test(CH4_ug_m2_h ~ Salt, data = detra$map_loaded) # NSD
wilcox.test(CH4_ug_m2_h ~ Salt, data = detra$map_loaded) # NSD
leveneTest(CH4_ug_m2_h ~ Salt, data = deinc$map_loaded)
shapiro.test(deinc$map_loaded$CH4_ug_m2_h)
t.test(CH4_ug_m2_h ~ Salt, data = deinc$map_loaded) # No data but sig.
wilcox.test(CH4_ug_m2_h ~ Salt, data = deinc$map_loaded) # No data but sig.
# No data yet. Data are from Weston et al. 2011.
# Nat sent integrated values for now put as D1.
for (i in 1:nrow(frol$map_loaded)) {
if (frol$map_loaded$sampleID[i] == "TS_FW_d1_12_1") {
frol$map_loaded$CH4_ug_m2_h[i] <- 20303.49838
}
}
for (i in 1:nrow(frol$map_loaded)) {
if (frol$map_loaded$sampleID[i] == "TS_FW_d1_12_2") {
frol$map_loaded$CH4_ug_m2_h[i] <- 84770.97026
}
}
for (i in 1:nrow(frol$map_loaded)) {
if (frol$map_loaded$sampleID[i] == "TS_SW_d1_12_1") {
frol$map_loaded$CH4_ug_m2_h[i] <- 32976.95881
}
}
for (i in 1:nrow(frol$map_loaded)) {
if (frol$map_loaded$sampleID[i] == "TS_SW_d1_12_2") {
frol$map_loaded$CH4_ug_m2_h[i] <- 68221.38115
}
}
leveneTest(CH4_ug_m2_h ~ Salt, data = nc$map_loaded)
shapiro.test(nc$map_loaded$CH4_ug_m2_h)
t.test(CH4_ug_m2_h ~ Salt, data = nc$map_loaded) # Marg.
wilcox.test(CH4_ug_m2_h ~ Salt, data = nc$map_loaded) # Marg.
label_df2 <- data.frame("Exp" = c("Obs", "Obs",
"Field", "Field",
"Field", "Field",
"Lab", "Lab",
"Lab", "Lab"),
"Estuary2" = c("SF", "SF",
"Waccamaw", "Waccamaw",
"Delaware", "Delaware",
"Delaware", "Delaware",
"Alligator", "Alligator"),
"y" = c(max(sf$map_loaded$CH4_ug_m2_h) + max(sf$map_loaded$CH4_ug_m2_h)/10,
max(sf$map_loaded$CH4_ug_m2_h) + max(sf$map_loaded$CH4_ug_m2_h)/10,
max(sc$map_loaded$CH4_ug_m2_h) + max(sc$map_loaded$CH4_ug_m2_h)/10,
max(sc$map_loaded$CH4_ug_m2_h) + max(sc$map_loaded$CH4_ug_m2_h)/10,
max(detra$map_loaded$CH4_ug_m2_h) + max(detra$map_loaded$CH4_ug_m2_h)/10,
max(detra$map_loaded$CH4_ug_m2_h) + max(detra$map_loaded$CH4_ug_m2_h)/10,
6.93 + 6.93/10,
6.93 + 6.93/10,
max(nc$map_loaded$CH4_ug_m2_h) + max(nc$map_loaded$CH4_ug_m2_h)/10,
max(nc$map_loaded$CH4_ug_m2_h) + max(nc$map_loaded$CH4_ug_m2_h)/10),
"x" = c("Freshwater", "Oligohaline", "Freshwater", "Oligohaline",
"Freshwater", "Oligohaline", "Freshwater", "Oligohaline",
"Freshwater", "Oligohaline"),
"label" = c("a", "b", "a", "b", "", "", "", "", "a", "b")) %>%
mutate(Exp = factor(Exp, levels = c("Obs", "Field", "Lab"))) %>%
mutate(Estuary2 = factor(Estuary2, levels = c("SF", "Waccamaw", "Delaware", "Alligator")))
# Only use top depth (data is repeated)
# Remove depth fill
#png("FinalFigs/Figure5.png", width = 8, height = 4, units = "in", res = 300)
ggplot(subset(frol$map_loaded, Depth == "0-5"), aes(Salt, CH4_ug_m2_h)) +
geom_boxplot(outlier.shape = NA, aes(colour = Salt)) +
geom_jitter(size = 2, alpha = 0.75, width = 0.2,
aes(shape = Estuary2, colour = Salt)) +
geom_text(data = label_df2, aes(x, y, label = label),
size = 4, color = "black", inherit.aes = F) +
labs(y = expression(""*CH[4]*" flux (Âµg/"*m^2*"/h)"),
colour = "Salinity",
shape = "Site") +
scale_colour_manual(values = c("blue", "red")) +
scale_shape_manual(breaks = c( "SF", "Waccamaw", "Delaware", "Alligator"),
values = c(24, 21, 23, 22)) +
guides(shape = guide_legend(order = 1,),
colour = guide_legend(order = 2)) +
facet_nested_wrap(~ Exp + Estuary2, scales = "free_y", nrow = 1) +
theme_bw() +
theme(legend.position = "right",
legend.spacing.y = unit(0.1, "cm"),
legend.margin = margin(0.25, 0, 0, -0.1, unit = "cm"),
legend.key.size = unit(0.4, "cm"),
axis.title.y = element_text(size = 12),
axis.title.x = element_blank(),
axis.text.y = element_text(size = 10),
axis.text.x = element_text(size = 10, angle = 45, hjust = 1),
strip.text = element_text(size = 10))
# Get all corrs
sf_cor <- multiple_correlations(env_nona = env_nona_sf, var = "CH4_ug_m2_h") %>%
dplyr::select(Variable, rho, SpearmanPcut)
sf_corG <- meth_corr_by_taxonomy(input = sf, level = 9, threshold = 0, data = "Yes") %>%
rename(Variable = Taxon) %>%
dplyr::select(Variable, rho, SpearmanPcut)
sf_corP <- meth_corr_by_taxonomy(input = sf, level = 2, threshold = 0.5, data = "Yes") %>%
rename(Variable = Taxon) %>%
dplyr::select(Variable, rho, SpearmanPcut)
sf_res <- rbind(sf_cor, sf_corG, sf_corP) %>%
rename(SF_rho = rho,
SF_sig = SpearmanPcut)
sf_res$Variable <- replace(sf_res$Variable, sf_res$Variable == "sed_pH" , "pH")
# Note, DE is just field, because no lab methane data yet
detra_cor <- multiple_correlations(env_nona = env_nona_detra, var = "CH4_ug_m2_h") %>%
dplyr::select(Variable, rho, SpearmanPcut)
detra_corG <- meth_corr_by_taxonomy(input = detra, level = 9, threshold = 0, data = "Yes") %>%
rename(Variable = Taxon) %>%
dplyr::select(Variable, rho, SpearmanPcut)
detra_corP <- meth_corr_by_taxonomy(input = detra, level = 2, threshold = 0.5, data = "Yes") %>%
rename(Variable = Taxon) %>%
dplyr::select(Variable, rho, SpearmanPcut)
de_res <- rbind(detra_cor, detra_corG, detra_corP) %>%
rename(DE_rho = rho,
DE_sig = SpearmanPcut)
nc_cor <- multiple_correlations(env_nona = env_nona_nc, var = "CH4_ug_m2_h") %>%
dplyr::select(Variable, rho, SpearmanPcut)
nc_corG <- meth_corr_by_taxonomy(input = nc, level = 9, threshold = 0, data = "Yes") %>%
rename(Variable = Taxon) %>%
dplyr::select(Variable, rho, SpearmanPcut)
nc_corP <- meth_corr_by_taxonomy(input = nc, level = 2, threshold = 0.5, data = "Yes") %>%
rename(Variable = Taxon) %>%
dplyr::select(Variable, rho, SpearmanPcut)
nc_res <- rbind(nc_cor, nc_corG, nc_corP) %>%
rename(AL_rho = rho,
AL_sig = SpearmanPcut)
sc_cor <- multiple_correlations(env_nona = env_nona_sc, var = "CH4_ug_m2_h") %>%
dplyr::select(Variable, rho, SpearmanPcut)
sc_corG <- meth_corr_by_taxonomy(input = sc, level = 9, threshold = 0, data = "Yes") %>%
rename(Variable = Taxon) %>%
dplyr::select(Variable, rho, SpearmanPcut)
sc_corP <- meth_corr_by_taxonomy(input = sc, level = 2, threshold = 0.5, data = "Yes") %>%
rename(Variable = Taxon) %>%
dplyr::select(Variable, rho, SpearmanPcut)
sc_res <- rbind(sc_cor, sc_corG, sc_corP) %>%
rename(WA_rho = rho,
WA_sig = SpearmanPcut)
# Make df
# Prep. data frame
CH4_res <- data.frame("Variable" = c("CO2_ug_m2_h", "sed_per_org", "DOC_mgL",
"TOC_mgL", "sed_per_C", "sed_CN",
"sed_per_N", "DON_mgL", "DIN_mgL", "TN_mgL",
"NH4_mgL", "sed_NH4_mgL", "PO4_mgL", "sed_PO4_mgL",
"pH", "Salinity_ppt_all", "NO3_mgL", "sed_NO3_mgL",
"N2O_ug_m2_h", "SRP_umol_m2_h", "SO4_mgL",
"sed_SO4_mgL", "Fe_mgL", "sed_Fe_mgL", "Mn_mgL",
"sed_Mn_mgL", "CH4_H2", "CH4_ac", "CH4_me",
"CH4_mix", "ANAMX", "AOA", "AOB", "NOB", "SRB_syn",
"Firmicutes", "ANME", "MOB_I", "MOB_II", "MOB_IIa",
"SRB", "FeRB"),
"Shortname" = c("CO2 Flux", "SOM", "DOC", "TOC", "C", "C:N",
"N", "DON", "DIN", "TN", "NH4", "NH4_s", "PO4",
"PO4_s", "pH", "Salinity", "NO3", "NO3_s",
"N2O Flux", "SR", "SO4", "SO4_s", "Fe", "Fe_s",
"Mn", "Mn_s", "CH4_H2", "CH4_ac", "CH4_me",
"CH4_mix", "ANAMX", "AOA", "AOB", "NOB",
"SRB_syn", "Firmicutes", "ANME", "MOB_I",
"MOB_II", "MOB_IIa", "SRB", "FeRB"),
"Type" = c("Flux", "Sediment", "Porewater", "Porewater",
"Sediment", "Sediment", "Sediment", "Porewater",
"Porewater", "Porewater", "Porewater", "Sediment",
"Porewater", "Sediment", "Porewater", "Porewater",
"Porewater", "Sediment", "Flux", "Porewater",
"Porewater", "Sediment", "Porewater", "Sediment",
"Porewater", "Sediment", "Sediment", "Sediment",
"Sediment", "Sediment", "Sediment", "Sediment",
"Sediment", "Sediment", "Sediment", "Sediment",
"Sediment", "Sediment", "Sediment", "Sediment",
"Sediment", "Sediment"),
"Prediction" = c("Positive", "Positive", "Positive", "Positive",
"Positive", "Negative", "Positive", "Positive",
"Positive", "Positive", "Positive", "Positive",
"Positive", "Positive", "Positive", "Negative",
"Negative", "Negative", "Negative", "Negative",
"Negative", "Negative", "Negative", "Negative",
"Negative", "Negative", "Positive", "Positive",
"Positive", "Positive", "Positive", "Positive",
"Positive", "Positive", "Positive", "Positive",
"Negative", "Negative", "Negative", "Negative",
"Negative", "Negative")) %>%
left_join(., sf_res, by = "Variable") %>%
left_join(., de_res, by = "Variable") %>%
left_join(., nc_res, by = "Variable") %>%
left_join(., sc_res, by = "Variable")
# Pretty heatmap
CH4_res_meta <- CH4_res %>%
dplyr::select(Shortname, Type, Prediction, SF_sig, WA_sig, DE_sig, AL_sig) %>%
mutate_if(is.character, as.factor)
CH4_res_mat <- CH4_res %>%
column_to_rownames(var = "Shortname") %>%
dplyr::select(SF_rho, WA_rho, DE_rho, AL_rho) %>%
as.matrix()
ann_rows <- data.frame(row.names = rownames(CH4_res_mat),
"AL_sig" = CH4_res_meta$`AL_sig`,
"DE_sig" = CH4_res_meta$`DE_sig`,
"WA_sig" = CH4_res_meta$`WA_sig`,
"SF_sig" = CH4_res_meta$`SF_sig`,
Prediction = CH4_res_meta$Prediction,
Type = CH4_res_meta$Type)
ann_colors <- list(Type = c(Flux = "#FFFF99",
Porewater = "#A6CEE3",
Sediment = "#B15928"),
Prediction = c(Positive = "red",
Negative = "blue"),
"SF_sig" = c(`Pfdr < 0.05` = "black",
`Pfdr > 0.05` = "white"),
"DE_sig" = c(`Pfdr < 0.05` = "black",
`Pfdr > 0.05` = "white"),
"AL_sig" = c(`Pfdr < 0.05` = "black",
`Pfdr > 0.05` = "white"),
"WA_sig" = c(`Pfdr < 0.05` = "black",
`Pfdr > 0.05` = "white"))
pheatmap(CH4_res_mat,
legend = T,
legend_breaks = c(-0.5, 0, 0.5, max(na.omit(CH4_res_mat))),
legend_labels = c("-0.5", "0", "0.5", "rho\n"),
main = "",
#color = bluered(100),
#border_color = NA,
#na_col = "gray",
scale = "none",
angle_col = 315,
fontsize = 6,
fontsize_row = 9,
fontsize_col = 9,
annotation_row = ann_rows,
annotation_colors = ann_colors,
cluster_rows = F,
cluster_cols = F,
gaps_row = c(16, 26, 36),
filename = "FinalFigs/Figure6.png",
width = 5,
height = 7)
dev.off()
pheatmap(CH4_res_mat,
legend = T,
legend_breaks = c(-0.5, 0, 0.5, max(na.omit(CH4_res_mat))),
legend_labels = c("-0.5", "0", "0.5", "rho\n"),
main = "",
#color = bluered(100),
#border_color = NA,
#na_col = "gray",
scale = "none",
angle_col = 315,
fontsize = 6,
fontsize_row = 9,
fontsize_col = 9,
annotation_row = ann_rows,
annotation_colors = ann_colors,
cluster_rows = F,
cluster_cols = F,
gaps_row = c(15, 26, 36),
filename = "FinalFigs/Figure6.png",
width = 5,
height = 7)
dev.off()
dev.set(dev.next())
dev.set(dev.next())
pheatmap(CH4_res_mat,
legend = T,
legend_breaks = c(-0.5, 0, 0.5, max(na.omit(CH4_res_mat))),
legend_labels = c("-0.5", "0", "0.5", "rho\n"),
main = "",
#color = bluered(100),
#border_color = NA,
#na_col = "gray",
scale = "none",
angle_col = 315,
fontsize = 6,
fontsize_row = 9,
fontsize_col = 9,
annotation_row = ann_rows,
annotation_colors = ann_colors,
cluster_rows = F,
cluster_cols = F,
gaps_row = c(15, 26, 36),
filename = "FinalFigs/Figure6.png",
width = 5,
height = 7)
dev.off()
#### _Venn ####
source("~/Documents/GitHub/EastCoast/plot_venn_diagram2.R")
plot_venn_diagram2_mirror(sf, "Salt", 0.000000000000000000000000000001)
png("FinalFigs/FigureS5.png", width = 9, height = 6, units = "in", res = 300)
plot_grid(plot_venn_diagram2_mirror(sf, "Salt", 0.000000000000000000000000000001),
plot_venn_diagram2(sc, "Salt", 0.000000000000000000000000000001),
plot_venn_diagram2(detra, "Salt", 0.000000000000000000000000000001),
plot_venn_diagram2_mirror(deinc, "Salt", 0.000000000000000000000000000001),
plot_venn_diagram2(nc, "Salt", 0.000000000000000000000000000001),
labels = c("(a) SF (Field obs.)", "(b) Waccamaw (Field exp.)", "(c) Delaware (Field exp.)",
"(d) Delaware (Lab exp.)", "(e) Alligator (Lab exp.)"))
dev.off()
png("FinalFigs/FigureS5.png", width = 9, height = 6, units = "in", res = 300)
plot_grid(plot_venn_diagram2_mirror(sf, "Salt", 0.000000000000000000000000000001),
plot_venn_diagram2(sc, "Salt", 0.000000000000000000000000000001),
plot_venn_diagram2(detra, "Salt", 0.000000000000000000000000000001),
plot_venn_diagram2_mirror(deinc, "Salt", 0.000000000000000000000000000001),
plot_venn_diagram2(nc, "Salt", 0.000000000000000000000000000001),
labels = c("(a) SF (Field obs.)", "(b) Waccamaw (Field exp.)", "(c) Delaware (Field exp.)",
"(d) Delaware (Lab exp.)", "(e) Alligator (Lab exp.)"),
label_size = 10,
label_x = -5)
dev.off()
png("FinalFigs/FigureS5.png", width = 9, height = 6, units = "in", res = 300)
plot_grid(plot_venn_diagram2_mirror(sf, "Salt", 0.000000000000000000000000000001),
plot_venn_diagram2(sc, "Salt", 0.000000000000000000000000000001),
plot_venn_diagram2(detra, "Salt", 0.000000000000000000000000000001),
plot_venn_diagram2_mirror(deinc, "Salt", 0.000000000000000000000000000001),
plot_venn_diagram2(nc, "Salt", 0.000000000000000000000000000001),
labels = c("(a) SF (Field obs.)", "(b) Waccamaw (Field exp.)", "(c) Delaware (Field exp.)",
"(d) Delaware (Lab exp.)", "(e) Alligator (Lab exp.)"),
label_size = 10,
label_x = -0.5)
dev.off()
png("FinalFigs/FigureS5.png", width = 9, height = 6, units = "in", res = 300)
plot_grid(plot_venn_diagram2_mirror(sf, "Salt", 0.000000000000000000000000000001),
plot_venn_diagram2(sc, "Salt", 0.000000000000000000000000000001),
plot_venn_diagram2(detra, "Salt", 0.000000000000000000000000000001),
plot_venn_diagram2_mirror(deinc, "Salt", 0.000000000000000000000000000001),
plot_venn_diagram2(nc, "Salt", 0.000000000000000000000000000001),
labels = c("(a) SF (Field obs.)", "(b) Waccamaw (Field exp.)", "(c) Delaware (Field exp.)",
"(d) Delaware (Lab exp.)", "(e) Alligator (Lab exp.)"),
label_size = 10,
label_x = -0.1)
dev.off()
png("FinalFigs/FigureS5.png", width = 9, height = 6, units = "in", res = 300)
plot_grid(plot_venn_diagram2_mirror(sf, "Salt", 0.000000000000000000000000000001),
plot_venn_diagram2(sc, "Salt", 0.000000000000000000000000000001),
plot_venn_diagram2(detra, "Salt", 0.000000000000000000000000000001),
plot_venn_diagram2_mirror(deinc, "Salt", 0.000000000000000000000000000001),
plot_venn_diagram2(nc, "Salt", 0.000000000000000000000000000001),
labels = c("(a) SF (Field obs.)", "(b) Waccamaw (Field exp.)", "(c) Delaware (Field exp.)",
"(d) Delaware (Lab exp.)", "(e) Alligator (Lab exp.)"),
label_size = 10,
label_x = -0.15,
label_y = -0.1)
dev.off()
png("FinalFigs/FigureS5.png", width = 9, height = 6, units = "in", res = 300)
plot_grid(plot_venn_diagram2_mirror(sf, "Salt", 0.000000000000000000000000000001),
plot_venn_diagram2(sc, "Salt", 0.000000000000000000000000000001),
plot_venn_diagram2(detra, "Salt", 0.000000000000000000000000000001),
plot_venn_diagram2_mirror(deinc, "Salt", 0.000000000000000000000000000001),
plot_venn_diagram2(nc, "Salt", 0.000000000000000000000000000001),
labels = c("(a) SF (Field obs.)", "(b) Waccamaw (Field exp.)", "(c) Delaware (Field exp.)",
"(d) Delaware (Lab exp.)", "(e) Alligator (Lab exp.)"),
label_size = 10,
label_x = -0.15,
label_y = 0.5)
dev.off()
png("FinalFigs/FigureS5.png", width = 9, height = 6, units = "in", res = 300)
plot_grid(plot_venn_diagram2_mirror(sf, "Salt", 0.000000000000000000000000000001),
plot_venn_diagram2(sc, "Salt", 0.000000000000000000000000000001),
plot_venn_diagram2(detra, "Salt", 0.000000000000000000000000000001),
plot_venn_diagram2_mirror(deinc, "Salt", 0.000000000000000000000000000001),
plot_venn_diagram2(nc, "Salt", 0.000000000000000000000000000001),
labels = c("(a) SF (Field obs.)", "(b) Waccamaw (Field exp.)", "(c) Delaware (Field exp.)",
"(d) Delaware (Lab exp.)", "(e) Alligator (Lab exp.)"),
label_size = 10,
label_x = -0.15,
label_y = 0.9)
dev.off()
names(frol$map_loaded)
metaComb_long <- melt(frol$map_loaded,
id.vars = c("Estuary", "sampleID"),
measure.vars = names(metaComb)[10:68])
metaComb_long <- melt(frol$map_loaded,
id.vars = c("Estuary", "sampleID"),
measure.vars = names(frol$map_loaded)[10:68])
# Sort by sample size
metaComb_long_n <- metaComb_long %>%
group_by(variable) %>%
dplyr::summarize(n = sum(!is.na(value))) %>%
arrange(desc(n))
metaComb_long$variable <- factor(metaComb_long$variable,
levels = metaComb_long_n$variable)
ggplot(metaComb_long, aes(Estuary, value, color = Estuary)) +
geom_boxplot() +
scale_color_viridis_d() +
facet_wrap(~ variable, scales = "free_y") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
axis.title.y = element_blank()) +
theme(strip.text = element_text(size = 6),
axis.text = element_text(size = 6),
legend.position = "none")
View(metaComb_long)
metaComb_long <- melt(frol$map_loaded,
id.vars = c("Estuary", "sampleID"),
measure.vars = names(frol$map_loaded)[10:68]) %>%
filter(variable == "CH4_ug_m2_h" |
variable == "CO2_ug_m2_h" |
variable == "Salinity_ppt_all" |
variable == "pH" |
variable == "sed_per_C" |
variable == "sed_per_N" |
variable == "sed_CN" |
variable == "Cl_mgL" |
variable == "SO4_mgL" |
variable == "TN_mgL" |
variable == "Fe_mgL" |
variable == "N2O_ug_m2_h" |
variable == "NH4_mgL" |
variable == "PO4_mgL")
# Sort by sample size
metaComb_long_n <- metaComb_long %>%
group_by(variable) %>%
dplyr::summarize(n = sum(!is.na(value))) %>%
arrange(desc(n))
metaComb_long$variable <- factor(metaComb_long$variable,
levels = metaComb_long_n$variable)
ggplot(metaComb_long, aes(Estuary, value, color = Estuary)) +
geom_boxplot() +
scale_color_viridis_d() +
facet_wrap(~ variable, scales = "free_y") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
axis.title.y = element_blank()) +
theme(strip.text = element_text(size = 6),
axis.text = element_text(size = 6),
legend.position = "none")
ggplot(metaComb_long, aes(Estuary, value, color = Estuary)) +
geom_boxplot() +
scale_color_viridis_d() +
labs(x = "Site") +
facet_wrap(~ variable, scales = "free_y") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
axis.title.y = element_blank()) +
theme(strip.text = element_text(size = 6),
axis.text = element_text(size = 6),
legend.position = "none")
ggplot(metaComb_long, aes(Estuary2, value, color = Estuary2)) +
geom_boxplot() +
scale_color_viridis_d() +
labs(x = "Site") +
facet_wrap(~ variable, scales = "free_y") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
axis.title.y = element_blank()) +
theme(strip.text = element_text(size = 6),
axis.text = element_text(size = 6),
legend.position = "none")
metaComb_long <- melt(frol$map_loaded,
id.vars = c("Estuary2", "sampleID"),
measure.vars = names(frol$map_loaded)[10:68]) %>%
filter(variable == "CH4_ug_m2_h" |
variable == "CO2_ug_m2_h" |
variable == "Salinity_ppt_all" |
variable == "pH" |
variable == "sed_per_C" |
variable == "sed_per_N" |
variable == "sed_CN" |
variable == "Cl_mgL" |
variable == "SO4_mgL" |
variable == "TN_mgL" |
variable == "Fe_mgL" |
variable == "N2O_ug_m2_h" |
variable == "NH4_mgL" |
variable == "PO4_mgL")
# Sort by sample size
metaComb_long_n <- metaComb_long %>%
group_by(variable) %>%
dplyr::summarize(n = sum(!is.na(value))) %>%
arrange(desc(n))
metaComb_long$variable <- factor(metaComb_long$variable,
levels = metaComb_long_n$variable)
ggplot(metaComb_long, aes(Estuary2, value, color = Estuary2)) +
geom_boxplot() +
scale_color_viridis_d() +
labs(x = "Site") +
facet_wrap(~ variable, scales = "free_y") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
axis.title.y = element_blank()) +
theme(strip.text = element_text(size = 6),
axis.text = element_text(size = 6),
legend.position = "none")
png("FinalFigs/FigureS5.png", width = 8, height = 6, units = "in", res = 300)
ggplot(metaComb_long, aes(Estuary2, value, color = Estuary2)) +
geom_boxplot() +
scale_color_viridis_d() +
labs(x = "Site") +
facet_wrap(~ variable, scales = "free_y") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
axis.title.y = element_blank()) +
theme(strip.text = element_text(size = 6),
axis.text = element_text(size = 6),
legend.position = "none")
dev.off()
