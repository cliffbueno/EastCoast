axis.text.y = element_text(size = 10),
axis.text.x = element_text(size = 10, angle = 45, hjust = 1),
strip.text = element_text(size = 10),
plot.margin = margin(5, 5, 5, 30, "pt"))
# Remake without barplot and extract legend for beta diversity plot
ggplot(alpha_long, aes(Est3Salt, value)) +
geom_jitter(size = 2, alpha = 0.75, width = 0.2,
aes(fill = Depth, shape = Estuary, colour = Salt)) +
geom_text(data = label_df, aes(Est3Salt, y, label = str_trim(.group)),
size = 4, color = "black") +
labs(x = "Site",
colour = "Salinity",
fill = "Depth (cm)",
shape = "Site") +
scale_colour_manual(values = c("blue", "red")) +
scale_fill_manual(values = c("black", "white")) +
scale_shape_manual(breaks = c( "SF", "Waccamaw", "Delaware", "Alligator"),
values = c(24, 21, 23, 22)) +
guides(shape = guide_legend(order = 1,),
colour = guide_legend(order = 2),
fill = guide_legend(override.aes = list(shape = c(16, 1)), order = 3)) +
facet_wrap(~ name, ncol = 2, scales = "free_y", labeller = as_labeller(facet_df)) +
theme_bw() +
theme(legend.position = "right",
legend.spacing.y = unit(0.1, "cm"),
legend.margin = margin(0.25, 0, 0, -0.1, unit = "cm"),
legend.key.size = unit(0.4, "cm"),
axis.title = element_blank(),
axis.text.y = element_text(size = 10),
axis.text.x = element_text(size = 10, angle = 45, hjust = 1),
strip.text = element_text(size = 10),
plot.margin = margin(5, 5, 5, 30, "pt"))
# Remake without barplot and extract legend for beta diversity plot
good_leg_plot <- ggplot(alpha_long, aes(Est3Salt, value)) +
geom_jitter(size = 2, alpha = 0.75, width = 0.2,
aes(fill = Depth, shape = Estuary, colour = Salt)) +
geom_text(data = label_df, aes(Est3Salt, y, label = str_trim(.group)),
size = 4, color = "black") +
labs(x = "Site",
colour = "Salinity",
fill = "Depth (cm)",
shape = "Site") +
scale_colour_manual(values = c("blue", "red")) +
scale_fill_manual(values = c("black", "white")) +
scale_shape_manual(breaks = c( "SF", "Waccamaw", "Delaware", "Alligator"),
values = c(24, 21, 23, 22)) +
guides(shape = guide_legend(order = 1,),
colour = guide_legend(order = 2),
fill = guide_legend(override.aes = list(shape = c(16, 1)), order = 3)) +
facet_wrap(~ name, ncol = 2, scales = "free_y", labeller = as_labeller(facet_df)) +
theme_bw() +
theme(legend.position = "right",
legend.spacing.y = unit(0.1, "cm"),
legend.margin = margin(0.25, 0, 0, -0.1, unit = "cm"),
legend.key.size = unit(0.4, "cm"),
axis.title = element_blank(),
axis.text.y = element_text(size = 10),
axis.text.x = element_text(size = 10, angle = 45, hjust = 1),
strip.text = element_text(size = 10),
plot.margin = margin(5, 5, 5, 30, "pt"))
good_leg <- get_legend(good_leg_plot)
pcoa_plots <- plot_grid(g, g2, g4, g3, g5, g6, ncol = 2)
fig3 <- plot_grid(pcoa_plots, good_leg, rel_widths = c(0.85, 0.15))
fig3
# Plot
micro.hulls <- ddply(frol$map_loaded, c("EstSalt"), find_hull)
g <- ggplot(frol$map_loaded, aes(Axis01, Axis02)) +
geom_polygon(data = micro.hulls,
aes(colour = EstSalt), fill = NA,
alpha = 0.1, show.legend = F) +
geom_point(size = 3, alpha = 0.5, aes(fill = Depth, colour = Salt, shape = Estuary),
show.legend = T) +
labs(x = paste("PC1: ", pcoaA1, "%", sep = ""),
y = paste("PC2: ", pcoaA2, "%", sep = ""),
colour = "Salt",
fill = "Depth (cm)",
shape = "Site") +
scale_colour_manual(values = c("blue", "red", "blue", "red", "blue", "red",
"blue", "red", "blue", "red")) +
scale_fill_manual(values = c("black", "white")) +
scale_shape_manual(values = c(21, 22, 23, 24)) +
guides(shape = guide_legend(order = 1,),
colour = guide_legend(order = 2),
fill = guide_legend(override.aes = list(shape = c(16, 1)), order = 3)) +
theme_bw() +
ggtitle("(a) Combined") +
theme(legend.position = "right",
legend.spacing.y = unit(0.1, "cm"),
legend.margin = margin(0.25, 0, 0, -0.1, unit = "cm"),
axis.title = element_text(size = 10),
axis.text = element_text(size = 10),
plot.title = element_text(vjust = -0.5, size = 12),
plot.margin = margin(0,0,0,10, "pt")) +
geom_segment(data = vec.df,
aes(x = 0, xend = Dim1, y = 0, yend = Dim2),
arrow = arrow(length = unit(0.35, "cm")),
colour = "gray", alpha = 0.5,
inherit.aes = FALSE) +
geom_text(data = vec.df,
aes(x = Dim1, y = Dim2, label = shortnames),
size = 2, color = "black")
# leg <- get_legend(g) # use good_leg from alpha diversity plot
g <- g + theme(legend.position = "none")
g
pcoa_plots <- plot_grid(g, g2, g4, g3, g5, g6, ncol = 2)
fig3 <- plot_grid(pcoa_plots, good_leg, rel_widths = c(0.85, 0.15))
fig3
bc_sf <- calc_dm(sf$data_loaded)
pcoa_sf <- cmdscale(bc_sf, k = nrow(sf$map_loaded) - 1, eig = T)
set.seed(100)
ef_sf <- envfit(pcoa_sf, env_sf, permutations = 999, na.rm = TRUE)
ef_sf
ordiplot(pcoa_sf)
plot(ef_sf, p.max = 0.05, cex = 0.5)
manual_factor_sf <- 0.3
vec.df_sf <- as.data.frame(ef_sf$vectors$arrows*sqrt(ef_sf$vectors$r)) %>%
mutate(Dim1 = Dim1 * manual_factor_sf,
Dim2 = Dim2 * manual_factor_sf) %>%
mutate(variables = rownames(.)) %>%
filter(ef_sf$vectors$pvals < 0.05) %>%
filter(variables != "sed_Cl_mgL") %>%
mutate(shortnames = c("CH4", "CO2", "Salinity", "DOC", "Fe", "Mn",
"Zn", "sed_pH", "sed_NH4", "sed_NO3", "sed_PO4", "C",
"N", "C:N", "BD", "sed_Fe", "sed_Mn", "sed_Cu", "sed_Zn"))
pcoaA1 <- round((eigenvals(pcoa_sf)/sum(eigenvals(pcoa_sf)))[1]*100, digits = 1)
pcoaA2 <- round((eigenvals(pcoa_sf)/sum(eigenvals(pcoa_sf)))[2]*100, digits = 1)
sf$map_loaded$Axis01 <- scores(pcoa_sf)[,1]
sf$map_loaded$Axis02 <- scores(pcoa_sf)[,2]
micro.hulls <- ddply(sf$map_loaded, c("Salt"), find_hull)
g2 <- ggplot(sf$map_loaded, aes(Axis01, Axis02)) +
geom_polygon(data = micro.hulls,
aes(colour = Salt), fill = NA,
alpha = 0.1, show.legend = F) +
geom_point(size = 3, alpha = 0.5, aes(colour = Salt, fill = Depth), shape = 24) +
geom_segment(data = vec.df_sf,
aes(x = 0, xend = Dim1, y = 0, yend = Dim2),
arrow = arrow(length = unit(0.35, "cm")),
colour = "gray", alpha = 0.5,
inherit.aes = FALSE) +
geom_text(data = subset(vec.df_sf, shortnames != "CO2" & shortnames != "CH4"),
aes(x = Dim1, y = Dim2, label = shortnames),
size = 2, color = "black") +
geom_text(data = subset(vec.df_sf, shortnames == "CO2"),
aes(x = Dim1, y = Dim2 - 0.03, label = shortnames),
size = 2, color = "black") +
geom_text(data = subset(vec.df_sf, shortnames == "CH4"),
aes(x = Dim1 - 0.04, y = Dim2, label = shortnames),
size = 2, color = "black") +
labs(x = paste("PC1: ", pcoaA1, "%", sep = ""),
y = paste("PC2: ", pcoaA2, "%", sep = "")) +
scale_colour_manual(values = c("blue", "red")) +
scale_fill_manual(values = c("black", "white")) +
theme_bw() +
ggtitle("(b) SF (field obs.)") +
theme(legend.position = "none",
axis.title = element_text(size = 10),
axis.text = element_text(size = 10),
plot.title = element_text(vjust = -0.5, size = 12),
plot.margin = margin(0,0,0,10, "pt"))
g2
pcoa_plots <- plot_grid(g, g2, g4, g3, g5, g6, ncol = 2)
fig3 <- plot_grid(pcoa_plots, good_leg, rel_widths = c(0.85, 0.15))
fig3
g5
g6
pcoa_plots <- plot_grid(g, g2, g4, g3, g5, g6, ncol = 2)
fig3 <- plot_grid(pcoa_plots, good_leg, rel_widths = c(0.85, 0.15))
fig3
png("FinalFigs/Figure3.png", width = 8, height = 6, units = "in", res = 300)
fig3
dev.off()
# Get all corrs
sf_cor <- multiple_correlations(env_nona = env_nona_sf, var = "Salinity_ppt_all") %>%
dplyr::select(Variable, rho, SpearmanPcut)
sf_corG <- meth_corr_by_taxonomy(input = sf, level = 9, threshold = 0, data = "Yes") %>%
rename(Variable = Taxon) %>%
dplyr::select(Variable, rho, SpearmanPcut)
sf_corP <- meth_corr_by_taxonomy(input = sf, level = 2, threshold = 0.5, data = "Yes") %>%
rename(Variable = Taxon) %>%
dplyr::select(Variable, rho, SpearmanPcut)
sf_corMGMT <- cor.test(sf$map_loaded$MG_MT, sf$map_loaded$Salinity_ppt_all, method = "spearman")
sf_res <- rbind(sf_cor, sf_corG, sf_corP) %>%
add_row("Variable" = "MG:MT", "rho" = round(sf_corMGMT$estimate, digits = 2), "SpearmanPcut" = "Pfdr > 0.05") %>%
rename(SF_rho = rho,
SF_sig = SpearmanPcut)
sf_res$Variable <- replace(sf_res$Variable, sf_res$Variable == "sed_pH" , "pH")
# Note, DE is just field, because no lab methane data yet
detra_cor <- multiple_correlations(env_nona = env_nona_detra, var = "Salinity_ppt_all") %>%
dplyr::select(Variable, rho, SpearmanPcut)
detra_corG <- meth_corr_by_taxonomy(input = detra, level = 9, threshold = 0, data = "Yes") %>%
rename(Variable = Taxon) %>%
dplyr::select(Variable, rho, SpearmanPcut)
detra_corP <- meth_corr_by_taxonomy(input = detra, level = 2, threshold = 0.5, data = "Yes") %>%
rename(Variable = Taxon) %>%
dplyr::select(Variable, rho, SpearmanPcut)
detra_corMGMT <- cor.test(detra$map_loaded$MG_MT, detra$map_loaded$Salinity_ppt_all, method = "spearman")
de_res <- rbind(detra_cor, detra_corG, detra_corP) %>%
add_row("Variable" = "MG:MT", "rho" = round(detra_corMGMT$estimate, digits = 2), "SpearmanPcut" = "Pfdr > 0.05") %>%
rename(DE_rho = rho,
DE_sig = SpearmanPcut)
nc_cor <- multiple_correlations(env_nona = env_nona_nc, var = "Salinity_ppt_all") %>%
dplyr::select(Variable, rho, SpearmanPcut)
nc_corG <- meth_corr_by_taxonomy(input = nc, level = 9, threshold = 0, data = "Yes") %>%
rename(Variable = Taxon) %>%
dplyr::select(Variable, rho, SpearmanPcut)
nc_corP <- meth_corr_by_taxonomy(input = nc, level = 2, threshold = 0.5, data = "Yes") %>%
rename(Variable = Taxon) %>%
dplyr::select(Variable, rho, SpearmanPcut)
nc_corMGMT <- cor.test(nc$map_loaded$MG_MT, nc$map_loaded$Salinity_ppt_all, method = "spearman")
nc_res <- rbind(nc_cor, nc_corG, nc_corP) %>%
add_row("Variable" = "MG:MT", "rho" = round(nc_corMGMT$estimate, digits = 2), "SpearmanPcut" = "Pfdr < 0.05") %>%
rename(AL_rho = rho,
AL_sig = SpearmanPcut)
sc_cor <- multiple_correlations(env_nona = env_nona_sc, var = "Salinity_ppt_all") %>%
dplyr::select(Variable, rho, SpearmanPcut)
sc_corG <- meth_corr_by_taxonomy(input = sc, level = 9, threshold = 0, data = "Yes") %>%
rename(Variable = Taxon) %>%
dplyr::select(Variable, rho, SpearmanPcut)
sc_corP <- meth_corr_by_taxonomy(input = sc, level = 2, threshold = 0.5, data = "Yes") %>%
rename(Variable = Taxon) %>%
dplyr::select(Variable, rho, SpearmanPcut)
sc_corMGMT <- cor.test(sc$map_loaded$MG_MT, sc$map_loaded$Salinity_ppt_all, method = "spearman")
sc_res <- rbind(sc_cor, sc_corG, sc_corP) %>%
add_row("Variable" = "MG:MT", "rho" = round(sc_corMGMT$estimate, digits = 2), "SpearmanPcut" = "Pfdr > 0.05") %>%
rename(WA_rho = rho,
WA_sig = SpearmanPcut)
# Make df
# Prep. data frame
# Update, need to merge WA SRP_umol_m2_h and DE SR_umol_cm3_d as SR column
Sal_res <- data.frame("Variable" = c("CH4_H2", "CH4_ac", "CH4_me", "CH4_mix", "MG:MT",
"ANME", "MOB_I", "MOB_II", "MOB_IIa",
"Salinity_ppt_all", "NO3_mgL", "sed_NO3_mgL",
"N2O_ug_m2_h", "SRP_umol_m2_h", "SR_umol_cm3_d", "SO4_mgL",
"sed_SO4_mgL", "SRB", "Fe_mgL", "sed_Fe_mgL",
"FeRB", "Mn_mgL", "sed_Mn_mgL",
"CO2_ug_m2_h", "sed_per_org", "DOC_mgL",
"TOC_mgL", "sed_per_C", "sed_CN",
"sed_per_N", "DON_mgL", "DIN_mgL", "TN_mgL",
"NH4_mgL", "sed_NH4_mgL", "PO4_mgL", "sed_PO4_mgL",
"pH", "Firmicutes", "Actinobacteriota"),
"Shortname" = c("CH4_H2", "CH4_ac", "CH4_me", "CH4_mix", "MG:MT",
"ANME", "MOB_I", "MOB_II", "MOB_IIa",
"Salinity", "NO3", "NO3_s",
"N2O Flux", "SR", "SR", "SO4", "SO4_s", "SRB",
"Fe", "Fe_s", "FeRB", "Mn", "Mn_s",
"CO2 Flux", "SOM", "DOC", "TOC", "C", "C:N",
"N", "DON", "DIN", "TN", "NH4", "NH4_s", "PO4",
"PO4_s", "pH", "Firmicutes", "Actinobacteriota"),
"Type" = c("Sediment", "Sediment", "Sediment", "Sediment", "Sediment",
"Sediment", "Sediment", "Sediment", "Sediment",
"Porewater", "Porewater", "Sediment", "Flux",
"Sediment", "Sediment", "Porewater", "Sediment", "Sediment",
"Porewater", "Sediment", "Sediment", "Porewater",
"Sediment",
"Flux", "Sediment", "Porewater", "Porewater",
"Sediment", "Sediment", "Sediment", "Porewater",
"Porewater", "Porewater", "Porewater", "Sediment",
"Porewater", "Sediment", "Porewater", "Sediment", "Sediment"),
"Prediction" = c("Positive", "Positive", "Positive", "Positive", "Positive",
"Negative", "Negative", "Negative", "Negative",
"Negative", "Negative", "Negative", "Negative",
"Negative", "Negative", "Negative", "Negative", "Negative",
"Negative", "Negative", "Negative", "Negative",
"Negative",
"Positive", "Positive", "Positive", "Positive",
"Positive", "Negative", "Positive", "Positive",
"Positive", "Positive", "Positive", "Positive",
"Positive", "Positive", "Positive", "Positive", "Positive"),
"Variable Type" = c("Microbial", "Microbial", "Microbial", "Microbial", "Microbial",
"Microbial", "Microbial", "Microbial", "Microbial",
"Chemical", "Chemical", "Chemical", "Chemical",
"Microbial", "Microbial", "Chemical", "Chemical", "Microbial",
"Chemical", "Chemical", "Microbial", "Chemical",
"Chemical",
"Chemical", "Chemical", "Chemical", "Chemical",
"Chemical", "Chemical", "Chemical", "Chemical",
"Chemical", "Chemical", "Chemical", "Chemical",
"Chemical", "Chemical", "Chemical", "Microbial", "Microbial"),
"Hypothesis" = c("Methanogens", "Methanogens", "Methanogens", "Methanogens", "Methanogens",
"Methanotrophs", "Methanotrophs", "Methanotrophs", "Methanotrophs",
"Alternate e-", "Alternate e-", "Alternate e-", "Alternate e-",
"Alternate e-", "Alternate e-", "Alternate e-", "Alternate e-",
"Alternate e-", "Alternate e-", "Alternate e-", "Alternate e-",
"Alternate e-", "Alternate e-",
"Decomposition", "Decomposition", "Decomposition", "Decomposition",
"Decomposition", "Decomposition", "Decomposition", "Decomposition",
"Decomposition", "Decomposition", "Decomposition", "Decomposition",
"Decomposition", "Decomposition", "Decomposition", "Decomposition",
"Decomposition")) %>%
left_join(., sf_res, by = "Variable") %>%
left_join(., de_res, by = "Variable") %>%
left_join(., nc_res, by = "Variable") %>%
left_join(., sc_res, by = "Variable")
View(Sal_res)
for (i in 1:nrow(Sal_res)) {
if(Sal_res$Variable[i] == "SRP_umol_m2_h") {
Sal_res$DE_rho[i] <- 0.79
}
if(Sal_res$Variable[i] == "SRP_umol_m2_h") {
Sal_res$DE_sig[i] <- "Pfdr > 0.05"
}
}
Sal_res <- subset(Sal_res, Variable != "SR_umol_cm3_d")
# Pretty heatmap
Sal_res_meta <- Sal_res %>%
dplyr::select(Shortname, Type, Variable.Type, Hypothesis, Prediction, SF_sig, WA_sig, DE_sig, AL_sig) %>%
mutate_if(is.character, as.factor)
Sal_res_mat <- Sal_res %>%
column_to_rownames(var = "Shortname") %>%
dplyr::select(SF_rho, WA_rho, DE_rho, AL_rho) %>%
as.matrix()
Sal_res_mat <- Sal_res %>%
rownames_to_column(var = "Num") %>%
dplyr::select(-Num) %>%
column_to_rownames(var = "Shortname") %>%
dplyr::select(SF_rho, WA_rho, DE_rho, AL_rho) %>%
as.matrix()
ann_rows <- data.frame(row.names = rownames(Sal_res_mat),
"AL_sig" = Sal_res_meta$`AL_sig`,
"DE_sig" = Sal_res_meta$`DE_sig`,
"WA_sig" = Sal_res_meta$`WA_sig`,
"SF_sig" = Sal_res_meta$`SF_sig`,
Prediction = Sal_res_meta$Prediction,
Hypothesis = Sal_res_meta$Hypothesis,
Variable = Sal_res_meta$Variable.Type,
Type = Sal_res_meta$Type)
ann_colors <- list(Type = c(Flux = "#FFFF99",
Porewater = "#A6CEE3",
Sediment = "#B15928"),
Variable = c(Chemical = "#440154FF",
Microbial = "#FDE725FF"),
Hypothesis = c(Methanogens = "#F8766D",
Methanotrophs = "#7CAE00",
`Alternate e-` = "#00BFC4",
Decomposition = "#C77CFF"),
Prediction = c(Positive = "red",
Negative = "blue"),
"SF_sig" = c(`Pfdr < 0.05` = "black",
`Pfdr > 0.05` = "white"),
"DE_sig" = c(`Pfdr < 0.05` = "black",
`Pfdr > 0.05` = "white"),
"AL_sig" = c(`Pfdr < 0.05` = "black",
`Pfdr > 0.05` = "white"),
"WA_sig" = c(`Pfdr < 0.05` = "black",
`Pfdr > 0.05` = "white"))
pheatmap(Sal_res_mat,
legend = T,
legend_breaks = c(-0.5, 0, 0.5, max(na.omit(Sal_res_mat))),
legend_labels = c("-0.5", "0", "0.5", "rho\n"),
main = "",
#color = bluered(100),
#border_color = NA,
#na_col = "gray",
scale = "none",
angle_col = 315,
fontsize = 6,
fontsize_row = 9,
fontsize_col = 9,
annotation_row = ann_rows,
annotation_colors = ann_colors,
cluster_rows = F,
cluster_cols = F,
gaps_row = c(5, 9, 21))
pheatmap(Sal_res_mat,
legend = T,
legend_breaks = c(-0.5, 0, 0.5, max(na.omit(Sal_res_mat))),
legend_labels = c("-0.5", "0", "0.5", "rho\n"),
main = "",
#color = bluered(100),
#border_color = NA,
#na_col = "gray",
scale = "none",
angle_col = 315,
fontsize = 6,
fontsize_row = 9,
fontsize_col = 9,
annotation_row = ann_rows,
annotation_colors = ann_colors,
cluster_rows = F,
cluster_cols = F,
gaps_row = c(5, 9, 21),
filename = "FinalFigs/FigureS2.png",
width = 5,
height = 7)
dev.off()
dev.set(dev.next())
dev.set(dev.next())
metaComb_long <- melt(frol$map_loaded,
id.vars = c("Estuary2", "Salt", "Depth", "sampleID"),
measure.vars = names(frol$map_loaded)[10:68]) %>%
filter(variable == "CH4_ug_m2_h" |
variable == "CO2_ug_m2_h" |
variable == "Salinity_ppt_all" |
variable == "pH" |
variable == "sed_per_C" |
variable == "sed_per_N" |
variable == "sed_CN" |
variable == "Cl_mgL" |
variable == "SO4_mgL" |
variable == "TN_mgL" |
variable == "Fe_mgL" |
variable == "N2O_ug_m2_h" |
variable == "NH4_mgL" |
variable == "PO4_mgL")
# Sort by sample size
metaComb_long_n <- metaComb_long %>%
group_by(variable) %>%
dplyr::summarize(n = sum(!is.na(value))) %>%
arrange(desc(n))
metaComb_long$variable <- factor(metaComb_long$variable,
levels = metaComb_long_n$variable)
metaComb_long <- subset(metaComb_long, variable != "CH4_ug_m2_h")
metaComb_long <- subset(metaComb_long, sampleID != "WestPond_CattailA_D1")
metaComb_long <- subset(metaComb_long, sampleID != "WestPond_CattailA_D2")
# SF Cl is in wrong units - divide by 35.453
metaComb_long <- metaComb_long %>%
mutate(value2 = value/35.453)
SF_Cl <- subset(metaComb_long, Estuary2 == "SF" & variable == "Cl_mgL")
SF_Cl$value <- SF_Cl$value2
metaComb_long <- rbind(metaComb_long, SF_Cl)
facet_names <- c("CO2_ug_m2_h" = "CO2 Flux (ug/m2/h)",
"Salinity_ppt_all" = "Salinity (ppt)",
"pH" = "pH",
"sed_per_C" = "% C",
"sed_per_N" = "% N",
"sed_CN" = "C:N",
"Cl_mgL" = "Cl (mg/L)",
"SO4_mgL" = "SO4 (mg/L)",
"TN_mgL" = "Total N (mg/L)",
"Fe_mgL" = "Fe (mg/L)",
"N2O_ug_m2_h" = "N2O Flux (ug/m2/h)",
"NH4_mgL" = "NH4 (mg/L)",
"PO4_mgL" = "PO4 (mg/L)")
strip <- strip_themed(background_x = elem_list_rect(fill = c("#FFFF99", "#A6CEE3", "#A6CEE3", "#B15928",
"#B15928", "#B15928", "#A6CEE3", "#A6CEE3",
"#A6CEE3", "#A6CEE3", "#FFFF99", "#A6CEE3",
"#A6CEE3")))
ggplot(metaComb_long, aes(Estuary2, value, color = Estuary2)) +
geom_boxplot(outlier.shape = NA, aes(colour = Salt)) +
geom_point(size = 2, alpha = 0.75, position = position_jitterdodge(),
aes(shape = Estuary2, colour = Salt)) +
labs(x = "Site",
colour = "Salinity",
fill = "Depth (cm)",
shape = "Site") +
scale_colour_manual(values = c("blue", "red")) +
scale_fill_manual(values = c("black", "white")) +
scale_shape_manual(breaks = c( "SF", "Waccamaw", "Delaware", "Alligator"),
values = c(24, 21, 23, 22)) +
guides(shape = guide_legend(order = 1,),
colour = guide_legend(order = 2),
fill = guide_legend(override.aes = list(shape = c(16, 1)), order = 3)) +
facet_wrap2(~ variable, scales = "free_y", labeller = as_labeller(facet_names), strip = strip, ncol = 3) +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
axis.title.y = element_blank()) +
theme(strip.text = element_text(size = 6),
axis.text = element_text(size = 6),
legend.position = "right")
strip <- strip_themed(background_x = elem_list_rect(fill = c("#FFFF99", "#B15928",
"#B15928", "#B15928",
"#A6CEE3", "#A6CEE3",
"#A6CEE3", "#A6CEE3",
"#A6CEE3", "#A6CEE3",
"#FFFF99", "#A6CEE3",
"#A6CEE3")))
ggplot(metaComb_long, aes(Estuary2, value, color = Estuary2)) +
geom_boxplot(outlier.shape = NA, aes(colour = Salt)) +
geom_point(size = 2, alpha = 0.75, position = position_jitterdodge(),
aes(shape = Estuary2, colour = Salt)) +
labs(x = "Site",
colour = "Salinity",
fill = "Depth (cm)",
shape = "Site") +
scale_colour_manual(values = c("blue", "red")) +
scale_fill_manual(values = c("black", "white")) +
scale_shape_manual(breaks = c( "SF", "Waccamaw", "Delaware", "Alligator"),
values = c(24, 21, 23, 22)) +
guides(shape = guide_legend(order = 1,),
colour = guide_legend(order = 2),
fill = guide_legend(override.aes = list(shape = c(16, 1)), order = 3)) +
facet_wrap2(~ variable, scales = "free_y", labeller = as_labeller(facet_names), strip = strip, ncol = 3) +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
axis.title.y = element_blank()) +
theme(strip.text = element_text(size = 6),
axis.text = element_text(size = 6),
legend.position = "right")
png("FinalFigs/FigureS6.png", width = 8, height = 6, units = "in", res = 300)
ggplot(metaComb_long, aes(Estuary2, value, color = Estuary2)) +
geom_boxplot(outlier.shape = NA, aes(colour = Salt)) +
geom_point(size = 2, alpha = 0.75, position = position_jitterdodge(),
aes(shape = Estuary2, colour = Salt)) +
labs(x = "Site",
colour = "Salinity",
fill = "Depth (cm)",
shape = "Site") +
scale_colour_manual(values = c("blue", "red")) +
scale_fill_manual(values = c("black", "white")) +
scale_shape_manual(breaks = c( "SF", "Waccamaw", "Delaware", "Alligator"),
values = c(24, 21, 23, 22)) +
guides(shape = guide_legend(order = 1,),
colour = guide_legend(order = 2),
fill = guide_legend(override.aes = list(shape = c(16, 1)), order = 3)) +
facet_wrap2(~ variable, scales = "free_y", labeller = as_labeller(facet_names), strip = strip, ncol = 3) +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
axis.title.y = element_blank()) +
theme(strip.text = element_text(size = 6),
axis.text = element_text(size = 6),
legend.position = "right")
dev.off()
