Type = CH4_res_meta$Type)
ann_colors <- list(Type = c(Flux = "#FFFF99",
Porewater = "#A6CEE3",
Sediment = "#B15928"),
Variable = c(Chemical = "#440154FF",
Microbial = "#FDE725FF"),
Prediction = c(Positive = "red",
Negative = "blue"),
"SF_sig" = c(`Pfdr < 0.05` = "black",
`Pfdr > 0.05` = "white"),
"DE_sig" = c(`Pfdr < 0.05` = "black",
`Pfdr > 0.05` = "white"),
"AL_sig" = c(`Pfdr < 0.05` = "black",
`Pfdr > 0.05` = "white"),
"WA_sig" = c(`Pfdr < 0.05` = "black",
`Pfdr > 0.05` = "white"))
pheatmap(CH4_res_mat,
legend = T,
legend_breaks = c(-0.5, 0, 0.5, max(na.omit(CH4_res_mat))),
legend_labels = c("-0.5", "0", "0.5", "rho\n"),
main = "",
#color = bluered(100),
#border_color = NA,
#na_col = "gray",
scale = "none",
angle_col = 315,
fontsize = 6,
fontsize_row = 9,
fontsize_col = 9,
annotation_row = ann_rows,
annotation_colors = ann_colors,
cluster_rows = F,
cluster_cols = F,
gaps_row = c(15, 26, 36))
pheatmap(CH4_res_mat,
legend = T,
legend_breaks = c(-0.5, 0, 0.5, max(na.omit(CH4_res_mat))),
legend_labels = c("-0.5", "0", "0.5", "rho\n"),
main = "",
#color = bluered(100),
#border_color = NA,
#na_col = "gray",
scale = "none",
angle_col = 315,
fontsize = 6,
fontsize_row = 9,
fontsize_col = 9,
annotation_row = ann_rows,
annotation_colors = ann_colors,
cluster_rows = F,
cluster_cols = F,
gaps_row = c(13, 29, 33))
pheatmap(CH4_res_mat,
legend = T,
legend_breaks = c(-0.5, 0, 0.5, max(na.omit(CH4_res_mat))),
legend_labels = c("-0.5", "0", "0.5", "rho\n"),
main = "",
#color = bluered(100),
#border_color = NA,
#na_col = "gray",
scale = "none",
angle_col = 315,
fontsize = 6,
fontsize_row = 9,
fontsize_col = 9,
annotation_row = ann_rows,
annotation_colors = ann_colors,
cluster_rows = F,
cluster_cols = F,
gaps_row = c(13, 29, 33),
filename = "FinalFigs/Figure6.png",
width = 5,
height = 7)
dev.off()
dev.set(dev.next())
dev.set(dev.next())
# Get all corrs
sf_cor <- multiple_correlations(env_nona = env_nona_sf, var = "Salinity_ppt_all") %>%
dplyr::select(Variable, rho, SpearmanPcut)
sf_corG <- meth_corr_by_taxonomy(input = sf, level = 9, threshold = 0, data = "Yes") %>%
rename(Variable = Taxon) %>%
dplyr::select(Variable, rho, SpearmanPcut)
sf_corP <- meth_corr_by_taxonomy(input = sf, level = 2, threshold = 0.5, data = "Yes") %>%
rename(Variable = Taxon) %>%
dplyr::select(Variable, rho, SpearmanPcut)
sf_res <- rbind(sf_cor, sf_corG, sf_corP) %>%
rename(SF_rho = rho,
SF_sig = SpearmanPcut)
sf_res$Variable <- replace(sf_res$Variable, sf_res$Variable == "sed_pH" , "pH")
# Note, DE is just field, because no lab methane data yet
detra_cor <- multiple_correlations(env_nona = env_nona_detra, var = "Salinity_ppt_all") %>%
dplyr::select(Variable, rho, SpearmanPcut)
detra_corG <- meth_corr_by_taxonomy(input = detra, level = 9, threshold = 0, data = "Yes") %>%
rename(Variable = Taxon) %>%
dplyr::select(Variable, rho, SpearmanPcut)
detra_corP <- meth_corr_by_taxonomy(input = detra, level = 2, threshold = 0.5, data = "Yes") %>%
rename(Variable = Taxon) %>%
dplyr::select(Variable, rho, SpearmanPcut)
de_res <- rbind(detra_cor, detra_corG, detra_corP) %>%
rename(DE_rho = rho,
DE_sig = SpearmanPcut)
nc_cor <- multiple_correlations(env_nona = env_nona_nc, var = "Salinity_ppt_all") %>%
dplyr::select(Variable, rho, SpearmanPcut)
nc_corG <- meth_corr_by_taxonomy(input = nc, level = 9, threshold = 0, data = "Yes") %>%
rename(Variable = Taxon) %>%
dplyr::select(Variable, rho, SpearmanPcut)
nc_corP <- meth_corr_by_taxonomy(input = nc, level = 2, threshold = 0.5, data = "Yes") %>%
rename(Variable = Taxon) %>%
dplyr::select(Variable, rho, SpearmanPcut)
nc_res <- rbind(nc_cor, nc_corG, nc_corP) %>%
rename(AL_rho = rho,
AL_sig = SpearmanPcut)
sc_cor <- multiple_correlations(env_nona = env_nona_sc, var = "Salinity_ppt_all") %>%
dplyr::select(Variable, rho, SpearmanPcut)
sc_corG <- meth_corr_by_taxonomy(input = sc, level = 9, threshold = 0, data = "Yes") %>%
rename(Variable = Taxon) %>%
dplyr::select(Variable, rho, SpearmanPcut)
sc_corP <- meth_corr_by_taxonomy(input = sc, level = 2, threshold = 0.5, data = "Yes") %>%
rename(Variable = Taxon) %>%
dplyr::select(Variable, rho, SpearmanPcut)
sc_res <- rbind(sc_cor, sc_corG, sc_corP) %>%
rename(WA_rho = rho,
WA_sig = SpearmanPcut)
# Make df
# Prep. data frame
Sal_res <- data.frame("Variable" = c("NO3_mgL", "sed_NO3_mgL",
"N2O_ug_m2_h", "SRP_umol_m2_h", "SO4_mgL",
"sed_SO4_mgL", "SRB", "Fe_mgL", "sed_Fe_mgL",
"FeRB", "Mn_mgL", "sed_Mn_mgL",
"CH4_ug_m2_h", "CO2_ug_m2_h", "sed_per_org", "DOC_mgL",
"TOC_mgL", "sed_per_C", "sed_CN",
"sed_per_N", "DON_mgL", "DIN_mgL", "TN_mgL",
"NH4_mgL", "sed_NH4_mgL", "PO4_mgL", "sed_PO4_mgL",
"pH", "Firmicutes",
"CH4_H2", "CH4_ac", "CH4_me", "CH4_mix",
"ANME", "MOB_I", "MOB_II", "MOB_IIa"),
"Shortname" = c("NO3", "NO3_s",
"N2O Flux", "SR", "SO4", "SO4_s", "SRB",
"Fe", "Fe_s", "FeRB", "Mn", "Mn_s",
"CH4 Flux", "CO2 Flux", "SOM", "DOC", "TOC", "C", "C:N",
"N", "DON", "DIN", "TN", "NH4", "NH4_s", "PO4",
"PO4_s", "pH", "Firmicutes",
"CH4_H2", "CH4_ac", "CH4_me", "CH4_mix",
"ANME", "MOB_I", "MOB_II", "MOB_IIa"),
"Type" = c("Porewater", "Sediment", "Flux",
"Porewater", "Porewater", "Sediment", "Sediment",
"Porewater", "Sediment", "Sediment", "Porewater",
"Sediment",
"Flux", "Flux", "Sediment", "Porewater", "Porewater",
"Sediment", "Sediment", "Sediment", "Porewater",
"Porewater", "Porewater", "Porewater", "Sediment",
"Porewater", "Sediment", "Porewater", "Sediment",
"Sediment", "Sediment", "Sediment", "Sediment",
"Sediment", "Sediment", "Sediment", "Sediment"),
"Prediction" = c("Negative", "Negative", "Negative",
"Negative", "Negative", "Negative", "Negative",
"Negative", "Negative", "Negative", "Negative",
"Negative",
"Negative", "Positive", "Positive", "Positive", "Positive",
"Positive", "Negative", "Positive", "Positive",
"Positive", "Positive", "Positive", "Positive",
"Positive", "Positive", "Positive", "Positive",
"Positive", "Positive", "Positive", "Positive",
"Negative", "Negative", "Negative", "Negative"),
"Variable Type" = c("Chemical", "Chemical", "Chemical",
"Chemical", "Chemical", "Chemical", "Microbial",
"Chemical", "Chemical", "Microbial", "Chemical",
"Chemical",
"Chemical", "Chemical", "Chemical", "Chemical", "Chemical",
"Chemical", "Chemical", "Chemical", "Chemical",
"Chemical", "Chemical", "Chemical", "Chemical",
"Chemical", "Chemical", "Chemical", "Microbial",
"Microbial", "Microbial", "Microbial", "Microbial",
"Microbial", "Microbial", "Microbial", "Microbial")) %>%
left_join(., sf_res, by = "Variable") %>%
left_join(., de_res, by = "Variable") %>%
left_join(., nc_res, by = "Variable") %>%
left_join(., sc_res, by = "Variable")
# Pretty heatmap
Sal_res_meta <- Sal_res %>%
dplyr::select(Shortname, Type, Variable.Type, Prediction, SF_sig, WA_sig, DE_sig, AL_sig) %>%
mutate_if(is.character, as.factor)
Sal_res_mat <- Sal_res %>%
column_to_rownames(var = "Shortname") %>%
dplyr::select(SF_rho, WA_rho, DE_rho, AL_rho) %>%
as.matrix()
ann_rows <- data.frame(row.names = rownames(Sal_res_mat),
"AL_sig" = Sal_res_meta$`AL_sig`,
"DE_sig" = Sal_res_meta$`DE_sig`,
"WA_sig" = Sal_res_meta$`WA_sig`,
"SF_sig" = Sal_res_meta$`SF_sig`,
Prediction = Sal_res_meta$Prediction,
Variable = Sal_res_meta$Variable.Type,
Type = Sal_res_meta$Type)
ann_colors <- list(Type = c(Flux = "#FFFF99",
Porewater = "#A6CEE3",
Sediment = "#B15928"),
Variable = c(Chemical = "#440154FF",
Microbial = "#FDE725FF"),
Prediction = c(Positive = "red",
Negative = "blue"),
"SF_sig" = c(`Pfdr < 0.05` = "black",
`Pfdr > 0.05` = "white"),
"DE_sig" = c(`Pfdr < 0.05` = "black",
`Pfdr > 0.05` = "white"),
"AL_sig" = c(`Pfdr < 0.05` = "black",
`Pfdr > 0.05` = "white"),
"WA_sig" = c(`Pfdr < 0.05` = "black",
`Pfdr > 0.05` = "white"))
pheatmap(Sal_res_mat,
legend = T,
legend_breaks = c(-0.5, 0, 0.5, max(na.omit(Sal_res_mat))),
legend_labels = c("-0.5", "0", "0.5", "rho\n"),
main = "",
#color = bluered(100),
#border_color = NA,
#na_col = "gray",
scale = "none",
angle_col = 315,
fontsize = 6,
fontsize_row = 9,
fontsize_col = 9,
annotation_row = ann_rows,
annotation_colors = ann_colors,
cluster_rows = F,
cluster_cols = F,
gaps_row = c(13, 29, 33),
filename = "FinalFigs/FigureS4.png",
width = 5,
height = 7)
pheatmap(Sal_res_mat,
legend = T,
legend_breaks = c(-0.5, 0, 0.5, max(na.omit(Sal_res_mat))),
legend_labels = c("-0.5", "0", "0.5", "rho\n"),
main = "",
#color = bluered(100),
#border_color = NA,
#na_col = "gray",
scale = "none",
angle_col = 315,
fontsize = 6,
fontsize_row = 9,
fontsize_col = 9,
annotation_row = ann_rows,
annotation_colors = ann_colors,
cluster_rows = F,
cluster_cols = F,
gaps_row = c(12, 29, 33),
filename = "FinalFigs/FigureS4.png",
width = 5,
height = 7)
# Make df
# Prep. data frame
Sal_res <- data.frame("Variable" = c("NO3_mgL", "sed_NO3_mgL",
"N2O_ug_m2_h", "SRP_umol_m2_h", "SO4_mgL",
"sed_SO4_mgL", "SRB", "Fe_mgL", "sed_Fe_mgL",
"FeRB", "Mn_mgL", "sed_Mn_mgL",
"CH4_ug_m2_h", "CO2_ug_m2_h", "sed_per_org", "DOC_mgL",
"TOC_mgL", "sed_per_C", "sed_CN",
"sed_per_N", "DON_mgL", "DIN_mgL", "TN_mgL",
"NH4_mgL", "sed_NH4_mgL", "PO4_mgL", "sed_PO4_mgL",
"pH", "Firmicutes",
"CH4_H2", "CH4_ac", "CH4_me", "CH4_mix",
"ANME", "MOB_I", "MOB_II", "MOB_IIa"),
"Shortname" = c("NO3", "NO3_s",
"N2O Flux", "SR", "SO4", "SO4_s", "SRB",
"Fe", "Fe_s", "FeRB", "Mn", "Mn_s",
"CH4 Flux", "CO2 Flux", "SOM", "DOC", "TOC", "C", "C:N",
"N", "DON", "DIN", "TN", "NH4", "NH4_s", "PO4",
"PO4_s", "pH", "Firmicutes",
"CH4_H2", "CH4_ac", "CH4_me", "CH4_mix",
"ANME", "MOB_I", "MOB_II", "MOB_IIa"),
"Type" = c("Porewater", "Sediment", "Flux",
"Porewater", "Porewater", "Sediment", "Sediment",
"Porewater", "Sediment", "Sediment", "Porewater",
"Sediment",
"Flux", "Flux", "Sediment", "Porewater", "Porewater",
"Sediment", "Sediment", "Sediment", "Porewater",
"Porewater", "Porewater", "Porewater", "Sediment",
"Porewater", "Sediment", "Porewater", "Sediment",
"Sediment", "Sediment", "Sediment", "Sediment",
"Sediment", "Sediment", "Sediment", "Sediment"),
"Prediction" = c("Positive", "Positive", "Positive",
"Positive", "Positive", "Positive", "Positive",
"Positive", "Positive", "Positive", "Positive",
"Positive",
"Negative", "Positive", "Positive", "Positive", "Positive",
"Positive", "Negative", "Positive", "Positive",
"Positive", "Positive", "Positive", "Positive",
"Positive", "Positive", "Positive", "Positive",
"Negative", "Negative", "Negative", "Negative",
"Negative", "Negative", "Negative", "Negative"),
"Variable Type" = c("Chemical", "Chemical", "Chemical",
"Chemical", "Chemical", "Chemical", "Microbial",
"Chemical", "Chemical", "Microbial", "Chemical",
"Chemical",
"Chemical", "Chemical", "Chemical", "Chemical", "Chemical",
"Chemical", "Chemical", "Chemical", "Chemical",
"Chemical", "Chemical", "Chemical", "Chemical",
"Chemical", "Chemical", "Chemical", "Microbial",
"Microbial", "Microbial", "Microbial", "Microbial",
"Microbial", "Microbial", "Microbial", "Microbial")) %>%
left_join(., sf_res, by = "Variable") %>%
left_join(., de_res, by = "Variable") %>%
left_join(., nc_res, by = "Variable") %>%
left_join(., sc_res, by = "Variable")
# Pretty heatmap
Sal_res_meta <- Sal_res %>%
dplyr::select(Shortname, Type, Variable.Type, Prediction, SF_sig, WA_sig, DE_sig, AL_sig) %>%
mutate_if(is.character, as.factor)
Sal_res_mat <- Sal_res %>%
column_to_rownames(var = "Shortname") %>%
dplyr::select(SF_rho, WA_rho, DE_rho, AL_rho) %>%
as.matrix()
ann_rows <- data.frame(row.names = rownames(Sal_res_mat),
"AL_sig" = Sal_res_meta$`AL_sig`,
"DE_sig" = Sal_res_meta$`DE_sig`,
"WA_sig" = Sal_res_meta$`WA_sig`,
"SF_sig" = Sal_res_meta$`SF_sig`,
Prediction = Sal_res_meta$Prediction,
Variable = Sal_res_meta$Variable.Type,
Type = Sal_res_meta$Type)
ann_colors <- list(Type = c(Flux = "#FFFF99",
Porewater = "#A6CEE3",
Sediment = "#B15928"),
Variable = c(Chemical = "#440154FF",
Microbial = "#FDE725FF"),
Prediction = c(Positive = "red",
Negative = "blue"),
"SF_sig" = c(`Pfdr < 0.05` = "black",
`Pfdr > 0.05` = "white"),
"DE_sig" = c(`Pfdr < 0.05` = "black",
`Pfdr > 0.05` = "white"),
"AL_sig" = c(`Pfdr < 0.05` = "black",
`Pfdr > 0.05` = "white"),
"WA_sig" = c(`Pfdr < 0.05` = "black",
`Pfdr > 0.05` = "white"))
pheatmap(Sal_res_mat,
legend = T,
legend_breaks = c(-0.5, 0, 0.5, max(na.omit(Sal_res_mat))),
legend_labels = c("-0.5", "0", "0.5", "rho\n"),
main = "",
#color = bluered(100),
#border_color = NA,
#na_col = "gray",
scale = "none",
angle_col = 315,
fontsize = 6,
fontsize_row = 9,
fontsize_col = 9,
annotation_row = ann_rows,
annotation_colors = ann_colors,
cluster_rows = F,
cluster_cols = F,
gaps_row = c(12, 29, 33),
filename = "FinalFigs/FigureS4.png",
width = 5,
height = 7)
#### 3. Lab Exps ####
# A closer look at these two experiments with contrasting methane/salinity results
# Highlight differences in phyla, guilds, methanogens, BGC
# Make Figure 6 multipanel figure
lab <- filter_data(frol,
filter_cat = "Site",
keep_vals = c("Soil incubation", "Soil Incubation")) # 23 samples
table(lab$map_loaded$Estuary)
lab$map_loaded <- lab$map_loaded %>%
mutate_if(is.character, as.factor) %>%
mutate(Salt = recode_factor(Detail,
"Freshwater 12wk" = "Control",
"DI_ctrl" = "Control",
"5 ppt ASW 12wk" = "+ASW",
"5ppt ASW" = "+ASW"))
lab$map_loaded$EstSalt <- paste(lab$map_loaded$Estuary,
lab$map_loaded$Salt,
sep = "_")
# Phyla
lab_phyla <- summarize_taxonomy(lab, level = 2, report_higher_tax = F)
lab_barsP <- plot_taxa_bars(lab_phyla, lab$map_loaded, "EstSalt",
num_taxa = 12, data_only = T) %>%
mutate(taxon = fct_rev(taxon)) %>%
separate(group_by, into = c("Estuary", "Salt"), sep = "_") %>%
mutate(Salt = fct_rev(Salt))
lab_legP <- get_legend(ggplot(lab_barsP, aes(Salt, mean_value, fill = taxon)) +
geom_bar(stat = "identity", colour = NA, size = 0.25) +
labs(x = "Sample", y = "Relative abundance", fill = "Phylum") +
scale_fill_manual(values = c("grey90", brewer.pal(12, "Paired")[12:1])) +
scale_y_continuous(expand = c(0.01, 0.01)) +
facet_wrap(~ Estuary) +
theme_classic() +
theme(axis.title.y = element_text(face = "bold", size = 12),
axis.title.x = element_blank(),
axis.text.y = element_text(size = 10),
axis.text.x = element_text(size = 10, angle = 45, hjust = 1),
strip.background = element_rect(size = 0.2),
axis.line.y = element_blank(),
legend.key.size = unit(0.18, "cm"),
legend.text = element_text(size = 7),
legend.title = element_text(size = 10)))
labP <- ggplot(lab_barsP, aes(Salt, mean_value, fill = taxon)) +
geom_bar(stat = "identity", colour = NA, size = 0.25) +
labs(x = "Sample", y = "Relative abundance", fill = "Phylum") +
scale_fill_manual(values = c("grey90", brewer.pal(12, "Paired")[12:1])) +
scale_y_continuous(expand = c(0.01, 0.01)) +
facet_wrap(~ Estuary) +
theme_classic() +
theme(axis.title.y = element_text(face = "bold", size = 12),
axis.title.x = element_blank(),
axis.text.y = element_text(size = 10),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
strip.background = element_rect(size = 0.2),
axis.line.y = element_blank(),
legend.position = "none")
labP
# Guilds
lab_guilds <- summarize_taxonomy(lab, level = 9, report_higher_tax = F)
lab_barsGu <- plot_taxa_bars(lab_guilds, lab$map_loaded, "EstSalt",
num_taxa = 20, data_only = T) %>%
filter(taxon != "NA") %>%
droplevels() %>%
mutate(taxon = factor(taxon,
levels = Guild_cols$Guild)) %>%
separate(group_by, into = c("Estuary", "Salt"), sep = "_") %>%
mutate(Salt = fct_rev(Salt))
tallest_barG <- lab_barsGu %>%
group_by(Estuary, Salt) %>%
summarise(sum = sum(mean_value))
lab_legG <- get_legend(ggplot(lab_barsGu, aes(Salt, mean_value, fill = taxon)) +
geom_bar(stat = "identity", colour = NA, size = 0.25) +
labs(x = "Estuary", y = "Relative abundance", fill = "Guild") +
scale_fill_manual(values = Guild_cols$color) +
scale_y_continuous(expand = c(max(tallest_barG$sum)/100, max(tallest_barG$sum)/100)) +
facet_wrap(~ Estuary) +
theme_classic() +
theme(axis.title.y = element_text(face = "bold", size = 12),
axis.title.x = element_blank(),
axis.text.y = element_text(size = 10),
axis.text.x = element_text(size = 10, angle = 45, hjust = 1),
strip.background = element_rect(size = 0.2),
axis.line.y = element_blank(),
legend.key.size = unit(0.18, "cm"),
legend.text = element_text(size = 7),
legend.title = element_text(size = 10)))
labG <- ggplot(lab_barsGu, aes(Salt, mean_value, fill = taxon)) +
geom_bar(stat = "identity", colour = NA, size = 0.25) +
labs(x = "Estuary", y = "Relative abundance", fill = "Guild") +
scale_fill_manual(values = Guild_cols$color) +
scale_y_continuous(expand = c(max(tallest_bar$sum)/100, max(tallest_bar$sum)/100)) +
facet_wrap(~ Estuary) +
theme_classic() +
theme(axis.title.y = element_text(face = "bold", size = 12),
axis.title.x = element_blank(),
axis.text.y = element_text(size = 10),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
strip.background = element_blank(),
strip.text = element_blank(),
axis.line.y = element_blank(),
legend.position = "none")
labG
View(tallest_barG)
ggplot(lab_barsGu, aes(Salt, mean_value, fill = taxon)) +
geom_bar(stat = "identity", colour = NA, size = 0.25) +
labs(x = "Estuary", y = "Relative abundance", fill = "Guild") +
scale_fill_manual(values = Guild_cols$color) +
scale_y_continuous(expand = c(max(tallest_barG$sum)/100, max(tallest_barG$sum)/100)) +
facet_wrap(~ Estuary) +
theme_classic() +
theme(axis.title.y = element_text(face = "bold", size = 12),
axis.title.x = element_blank(),
axis.text.y = element_text(size = 10),
axis.text.x = element_text(size = 10, angle = 45, hjust = 1),
strip.background = element_rect(size = 0.2),
axis.line.y = element_blank(),
legend.key.size = unit(0.18, "cm"),
legend.text = element_text(size = 7),
legend.title = element_text(size = 10))
dev.off()
dev.set(dev.next())
dev.set(dev.next())
plot(c(1,2), c(3,4))
pdf()
dev.off()
pheatmap(Sal_res_mat,
legend = T,
legend_breaks = c(-0.5, 0, 0.5, max(na.omit(Sal_res_mat))),
legend_labels = c("-0.5", "0", "0.5", "rho\n"),
main = "",
#color = bluered(100),
#border_color = NA,
#na_col = "gray",
scale = "none",
angle_col = 315,
fontsize = 6,
fontsize_row = 9,
fontsize_col = 9,
annotation_row = ann_rows,
annotation_colors = ann_colors,
cluster_rows = F,
cluster_cols = F,
gaps_row = c(12, 29, 33),
filename = "FinalFigs/FigureS4.png",
width = 5,
height = 7)
dev.off()
dev.set(dev.next())
dev.set(dev.next())
dev.set(dev.next())
x = c(1,2,3,4)
y = c(1,2,3,4)
plot(x,y)
