sc_mp_results$Group[i] <- "Control_0.02"
}
}
for (i in 1:nrow(sc_mp_results)) {
if (sc_mp_results$num_sites[i] == 1 & sc_mp_results$s.Control0.1[i] == 1) {
sc_mp_results$Group[i] <- "Control_0.1"
}
}
for (i in 1:nrow(sc_mp_results)) {
if (sc_mp_results$num_sites[i] == 1 & sc_mp_results$`s.Freshwater amended0.02`[i] == 1) {
sc_mp_results$Group[i] <- "+Fresh_0.02"
}
}
for (i in 1:nrow(sc_mp_results)) {
if (sc_mp_results$num_sites[i] == 1 & sc_mp_results$`s.Freshwater amended0.1`[i] == 1) {
sc_mp_results$Group[i] <- "+Fresh_0.1"
}
}
for (i in 1:nrow(sc_mp_results)) {
if (sc_mp_results$num_sites[i] == 1 & sc_mp_results$`s.Saltwater amended0.02`[i] == 1) {
sc_mp_results$Group[i] <- "+Salt_0.02"
}
}
for (i in 1:nrow(sc_mp_results)) {
if (sc_mp_results$num_sites[i] == 1 & sc_mp_results$`s.Saltwater amended0.1`[i] == 1) {
sc_mp_results$Group[i] <- "+Salt_0.1"
}
}
for (i in 1:nrow(sc_mp_results)) {
if (sc_mp_results$num_sites[i] == 2 & sc_mp_results$`s.Saltwater amended0.02`[i] == 1 &
sc_mp_results$`s.Saltwater amended0.1`[i] == 1) {
sc_mp_results$Group[i] <- "+Salt_both"
}
}
table(sc_mp_results$Group)
sc_genus_all <- data.frame("RelAbundance" = round(rowMeans(sc_genus)/min(colSums(sc$data_loaded)) * 100,
digits = 4)) %>%
mutate(Genus = rownames(.))
sc_mp_corrs <- as.data.frame(sc_mp$str) %>%
dplyr::select(1:length(levels(sc$map_loaded$TrtDepth)),
`Saltwater amended0.02+Saltwater amended0.1`) %>%
mutate(Genus = rownames(.)) %>%
filter(Genus %in% sc_mp_results$Genus) %>%
set_names(c("Control_0.02", "Control_0.1", "+Fresh_0.02", "+Fresh_0.1", "+Salt_0.02",
"+Salt_0.1", "+Salt_both", "Genus"))
# Add corrs and taxonomy
sc_mp_results <- sc_mp_results %>%
filter(Group == "+Salt_0.02" | Group == "+Salt_0.1" | Group == "+Salt_both") %>%
left_join(., sc_genus_all, by = "Genus") %>%
left_join(., sc_mp_corrs, by = "Genus") %>%
dplyr::select(taxonomy2, Genus, Group, names(sc_mp_corrs)[1:7], "RelAbundance") %>%
arrange(Group, taxonomy2) %>%
mutate(Genus = factor(Genus, levels = Genus)) %>%
set_names(c("Phylum", "Genus", "Group", names(sc_mp_corrs)[1:7], "RelAbundance")) %>%
mutate(taxon = paste(Phylum, Genus, sep = "; ")) %>%
mutate(taxon = factor(taxon, levels = taxon))
# Plot heatmap with abundance barplot
sc.hm.melted <- sc_mp_results %>%
dplyr::select(taxon, names(sc_mp_corrs)[1:7]) %>%
melt(., id.vars = c("taxon"))
sc.hm <- ggplot(data = sc.hm.melted,
aes(x = factor(taxon), y = variable, fill = value)) +
geom_tile() +
scale_fill_distiller(name = "Indicator correlation index", palette = "RdBu",
direction = -1, na.value = "transparent", type = "div", limits = c(-1, 1)) +
scale_x_discrete(breaks = unique(sc.hm.melted$taxon), labels = unique(sc.hm.melted$taxon),
limits = rev(levels(sc.hm.melted$taxon))) +
scale_y_discrete(position = "right") +
theme_minimal() +
theme(legend.position = "bottom", legend.direction = "horizontal",
legend.title = element_text(size = 10), legend.key.height = unit(0.5,"cm"),
legend.key.width = unit(1, "cm"), legend.text = element_text(size = 7)) +
guides(fill = guide_colorbar(title.position = "top", title.hjust = 0.5)) +
coord_flip()
sc.l <- get_legend(sc.hm)
sc.hm.clean <- sc.hm +
theme(axis.title.y = element_blank(),
axis.text.y = element_text(margin = margin(c(0,-5,0,0)),
size = 6),
axis.ticks.y = element_blank(), axis.ticks.x = element_blank(),
panel.grid.major = element_blank(), legend.position="none",
axis.text.x.top = element_text(size = 6, margin = margin(c(0,0,-2,0))),
plot.margin = margin(c(0,-2,0,5))) +
labs(y = "Group")
sc.bp.y <- ggplot(data = sc_mp_results, aes(x = taxon, y = RelAbundance)) +
geom_bar(stat = "identity", fill = "grey") +
scale_y_continuous(position = "right") +
scale_x_discrete(limits = rev(levels(sc_mp_results$taxon))) +
coord_flip() +
theme_minimal() +
theme(axis.title.y = element_blank(), axis.text.y = element_blank(),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
legend.position="none", plot.margin = margin(c(0,5,0,-5)),
axis.text.x.top = element_text(size = 6, margin = margin(c(0,0,-2,0)))) +
labs(y = "Rel. abund. (%)")
pdf("InitialFigs/SC_Multipatt_genus.pdf", width = 8, height = 5)
plot_grid(sc.hm.clean, sc.bp.y, sc.l, NULL, nrow = 2, ncol = 2,
rel_widths = c(10,2), rel_heights = c(12, 2), align = "hv", axis = "b")
dev.off()
#### __Multipatt ####
set.seed(1202)
field_mp <- multipatt(t(field$data_loaded),
field$map_loaded$Salt,
func = "r.g",
control = how(nperm=999),
max.order = 1)
#### __Multipatt ####
set.seed(1202)
lab_mp <- multipatt(t(lab$data_loaded),
lab$map_loaded$Salt,
func = "r.g",
control = how(nperm=999),
max.order = 1)
field_mp_results <- field_mp$sign %>%
mutate(q.value = qvalue(field_mp$sign$p.value)$qvalues,
Group = "NA",
ASV = rownames(field_mp$sign)) %>%
filter(q.value < 0.05) %>%
filter(stat >= 0.65) %>%
left_join(., field$taxonomy_loaded, by = c("ASV" = "taxonomy8"))
for (i in 1:nrow(field_mp_results)) {
if (field_mp_results$s.Freshwater[i] == 1) {
field_mp_results$Group[i] <- "Freshwater"
}
}
for (i in 1:nrow(field_mp_results)) {
if (field_mp_results$s.Oligohaline[i] == 1) {
field_mp_results$Group[i] <- "Oligohaline"
}
}
for (i in 1:nrow(field_mp_results)) {
if (field_mp_results$s.Mesohaline[i] == 1) {
field_mp_results$Group[i] <- "Mesohaline"
}
}
for (i in 1:nrow(field_mp_results)) {
if (field_mp_results$s.Polyhaline[i] == 1) {
field_mp_results$Group[i] <- "Polyhaline"
}
}
table(field_mp_results$Group)
field_asv <- summarize_taxonomy(field, level = 8, report_higher_tax = F)
field_asv_all <- data.frame("RelAbundance" = round(rowMeans(field_asv) * 100, digits = 5)) %>%
mutate(ASV = rownames(.))
field_mp_corrs <- as.data.frame(field_mp$str) %>%
dplyr::select(1:length(levels(field$map_loaded$Salt))) %>%
mutate(ASV = rownames(.)) %>%
filter(ASV %in% field_mp_results$ASV) %>%
set_names(c("Freshwater", "Oligohaline", "Mesolhaline", "Polyhaline", "ASV"))
# Add corrs and taxonomy
field_mp_results <- field_mp_results %>%
left_join(., field_asv_all, by = "ASV") %>%
left_join(., field_mp_corrs, by = "ASV") %>%
dplyr::select(taxonomy2, taxonomy6, ASV, Group, names(field_mp_corrs)[1:4], "RelAbundance") %>%
mutate(ASV = gsub("ASV", "OTU", ASV)) %>%
arrange(Group, taxonomy2, taxonomy6) %>%
mutate(ASV = factor(ASV, levels = ASV)) %>%
set_names(c("Phylum", "Genus", "ASV", "Group", names(field_mp_corrs)[1:4], "RelAbundance")) %>%
mutate(taxon = paste(Phylum, Genus, ASV, sep = "; ")) %>%
mutate(taxon = factor(taxon, levels = taxon))
# Plot heatmap with abundance barplot
field.hm.melted <- field_mp_results %>%
dplyr::select(taxon, names(field_mp_corrs)[1:4]) %>%
melt(., id.vars = c("taxon"))
field.hm <- ggplot(data = field.hm.melted,
aes(x = factor(taxon), y = variable, fill = value)) +
geom_tile() +
scale_fill_distiller(name = "Indicator correlation index", palette = "RdBu", direction = -1, na.value = "transparent", type = "div", limits = c(-1, 1)) +
scale_x_discrete(breaks = unique(field.hm.melted$taxon), labels = unique(field.hm.melted$taxon),
limits = rev(levels(field.hm.melted$taxon))) +
scale_y_discrete(position = "right") +
theme_minimal() +
theme(legend.position = "bottom", legend.direction = "horizontal",
legend.title = element_text(size = 10), legend.key.height = unit(0.5,"cm"),
legend.key.width = unit(1, "cm"), legend.text = element_text(size = 7)) +
guides(fill = guide_colorbar(title.position = "top", title.hjust = 0.5)) +
coord_flip()
field.l <- get_legend(field.hm)
field.hm.clean <- field.hm +
theme(axis.title.y = element_blank(), axis.text.y = element_text(margin = margin(c(0,-5,0,0)),
size = 6),
axis.ticks.y = element_blank(), axis.ticks.x = element_blank(),
panel.grid.major = element_blank(), legend.position="none",
axis.text.x.top = element_text(size = 6, margin = margin(c(0,0,-2,0))),
plot.margin = margin(c(0,-2,0,5))) +
labs(y = "Group")
field.bp.y <- ggplot(data = field_mp_results, aes(x = taxon, y = RelAbundance)) +
geom_bar(stat = "identity", fill = "grey") +
scale_y_continuous(position = "right") +
scale_x_discrete(limits = rev(levels(field_mp_results$taxon))) +
coord_flip() +
theme_minimal() +
theme(axis.title.y = element_blank(), axis.text.y = element_blank(),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
legend.position="none", plot.margin = margin(c(0,5,0,-5)),
axis.text.x.top = element_text(size = 6, margin = margin(c(0,0,-2,0)))) +
labs(y = "Rel. abund. (%)")
pdf("InitialFigs/Comb_Control_Multipatt.pdf", width = 8, height = 6)
plot_grid(field.hm.clean, field.bp.y, field.l, NULL, nrow = 2, ncol = 2,
rel_widths = c(10,2), rel_heights = c(12, 2), align = "hv", axis = "b")
dev.off()
# Problem is that at OTU level, many OTUs are too rare, not even 1%. So let's see what indicators there are at the genus level.
# First get aggregate taxonomy table
field_tax <- field$taxonomy_loaded %>%
group_by(taxonomy6) %>%
slice_head(n = 1) %>%
dplyr::select(-taxonomy7, -taxonomy8)
field_genus <- summarize_taxonomy(field, level = 6, relative = F, report_higher_tax = F)
set.seed(1202)
field_mp <- multipatt(t(field_genus),
field$map_loaded$Salt,
func = "r.g",
control = how(nperm=999),
max.order = 1)
field_mp_results <- field_mp$sign %>%
mutate(q.value = qvalue(field_mp$sign$p.value)$qvalues,
Group = "NA",
Genus = rownames(field_mp$sign)) %>%
filter(q.value < 0.05) %>%
filter(stat >= 0.57) %>%
left_join(., field_tax, by = c("Genus" = "taxonomy6"))
for (i in 1:nrow(field_mp_results)) {
if (field_mp_results$s.Freshwater[i] == 1) {
field_mp_results$Group[i] <- "Freshwater"
}
}
for (i in 1:nrow(field_mp_results)) {
if (field_mp_results$s.Oligohaline[i] == 1) {
field_mp_results$Group[i] <- "Oligohaline"
}
}
for (i in 1:nrow(field_mp_results)) {
if (field_mp_results$s.Mesohaline[i] == 1) {
field_mp_results$Group[i] <- "Mesohaline"
}
}
for (i in 1:nrow(field_mp_results)) {
if (field_mp_results$s.Polyhaline[i] == 1) {
field_mp_results$Group[i] <- "Polyhaline"
}
}
table(field_mp_results$Group)
field_genus_all <- data.frame("RelAbundance" = round(rowMeans(field_genus)/min(colSums(field$data_loaded)) * 100, digits = 4)) %>%
mutate(Genus = rownames(.))
field_mp_corrs <- as.data.frame(field_mp$str) %>%
dplyr::select(1:length(levels(field$map_loaded$Salt))) %>%
mutate(Genus = rownames(.)) %>%
filter(Genus %in% field_mp_results$Genus) %>%
set_names(c("Freshwater", "Oligohaline", "Mesohaline", "Polyhaline", "Genus"))
# Add corrs and taxonomy
field_mp_results <- field_mp_results %>%
left_join(., field_genus_all, by = "Genus") %>%
left_join(., field_mp_corrs, by = "Genus") %>%
dplyr::select(taxonomy2, Genus, Group, names(field_mp_corrs)[1:4], "RelAbundance") %>%
arrange(Group, taxonomy2) %>%
mutate(Genus = factor(Genus, levels = Genus)) %>%
set_names(c("Phylum", "Genus", "Group", names(field_mp_corrs)[1:4], "RelAbundance")) %>%
mutate(taxon = paste(Phylum, Genus, sep = "; ")) %>%
mutate(taxon = factor(taxon, levels = taxon))
# Plot heatmap with abundance barplot
field.hm.melted <- field_mp_results %>%
dplyr::select(taxon, names(field_mp_corrs)[1:4]) %>%
melt(., id.vars = c("taxon"))
field.hm <- ggplot(data = field.hm.melted,
aes(x = factor(taxon), y = variable, fill = value)) +
geom_tile() +
scale_fill_distiller(name = "Indicator correlation index", palette = "RdBu", direction = -1, na.value = "transparent", type = "div", limits = c(-1, 1)) +
scale_x_discrete(breaks = unique(field.hm.melted$taxon), labels = unique(field.hm.melted$taxon),
limits = rev(levels(field.hm.melted$taxon))) +
scale_y_discrete(position = "right") +
theme_minimal() +
theme(legend.position = "bottom", legend.direction = "horizontal",
legend.title = element_text(size = 10), legend.key.height = unit(0.5,"cm"),
legend.key.width = unit(1, "cm"), legend.text = element_text(size = 7)) +
guides(fill = guide_colorbar(title.position = "top", title.hjust = 0.5)) +
coord_flip()
field.l <- get_legend(field.hm)
field.hm.clean <- field.hm +
theme(axis.title.y = element_blank(), axis.text.y = element_text(margin = margin(c(0,-5,0,0)),
size = 6),
axis.ticks.y = element_blank(), axis.ticks.x = element_blank(),
panel.grid.major = element_blank(), legend.position="none",
axis.text.x.top = element_text(size = 6, margin = margin(c(0,0,-2,0))),
plot.margin = margin(c(0,-2,0,5))) +
labs(y = "Group")
field.bp.y <- ggplot(data = field_mp_results, aes(x = taxon, y = RelAbundance)) +
geom_bar(stat = "identity", fill = "grey") +
scale_y_continuous(position = "right") +
scale_x_discrete(limits = rev(levels(field_mp_results$taxon))) +
coord_flip() +
theme_minimal() +
theme(axis.title.y = element_blank(), axis.text.y = element_blank(),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
legend.position="none", plot.margin = margin(c(0,5,0,-5)),
axis.text.x.top = element_text(size = 6, margin = margin(c(0,0,-2,0)))) +
labs(y = "Rel. abund. (%)")
pdf("InitialFigs/Comb_Control_Multipatt_genus.pdf", width = 8, height = 6)
plot_grid(field.hm.clean, field.bp.y, field.l, NULL, nrow = 2, ncol = 2,
rel_widths = c(10,2), rel_heights = c(12, 2), align = "hv", axis = "b")
dev.off()
lab_mp_results <- lab_mp$sign %>%
mutate(q.value = qvalue(lab_mp$sign$p.value)$qvalues,
Group = "NA",
ASV = rownames(lab_mp$sign)) %>%
filter(p.value < 0.01) %>%
filter(stat >= 0.5) %>%
left_join(., lab$taxonomy_loaded, by = c("ASV" = "taxonomy8"))
for (i in 1:nrow(lab_mp_results)) {
if (lab_mp_results$s.Control[i] == 1) {
lab_mp_results$Group[i] <- "Control"
}
}
for (i in 1:nrow(lab_mp_results)) {
if (lab_mp_results$`s.+ASW`[i] == 1) {
lab_mp_results$Group[i] <- "+ASW"
}
}
table(lab_mp_results$Group)
lab_asv <- summarize_taxonomy(lab, level = 8, report_higher_tax = F)
lab_asv_all <- data.frame("RelAbundance" = round(rowMeans(lab_asv) * 100, digits = 5)) %>%
mutate(ASV = rownames(.))
lab_mp_corrs <- as.data.frame(lab_mp$str) %>%
dplyr::select(1:length(levels(lab$map_loaded$Salt))) %>%
mutate(ASV = rownames(.)) %>%
filter(ASV %in% lab_mp_results$ASV) %>%
set_names(c("Control", "+ASW", "ASV"))
# Add corrs and taxonomy
lab_mp_results <- lab_mp_results %>%
left_join(., lab_asv_all, by = "ASV") %>%
left_join(., lab_mp_corrs, by = "ASV") %>%
dplyr::select(taxonomy2, taxonomy6, ASV, Group, names(lab_mp_corrs)[1:2], "RelAbundance") %>%
mutate(ASV = gsub("ASV", "OTU", ASV)) %>%
arrange(Group, taxonomy2, taxonomy6) %>%
mutate(ASV = factor(ASV, levels = ASV)) %>%
set_names(c("Phylum", "Genus", "ASV", "Group", names(lab_mp_corrs)[1:2], "RelAbundance")) %>%
mutate(taxon = paste(Phylum, Genus, ASV, sep = "; ")) %>%
mutate(taxon = factor(taxon, levels = taxon))
# Plot heatmap with abundance barplot
lab.hm.melted <- lab_mp_results %>%
dplyr::select(taxon, names(lab_mp_corrs)[1:2]) %>%
melt(., id.vars = c("taxon"))
lab.hm <- ggplot(data = lab.hm.melted,
aes(x = factor(taxon), y = variable, fill = value)) +
geom_tile() +
scale_fill_distiller(name = "Indicator correlation index", palette = "RdBu", direction = -1, na.value = "transparent", type = "div", limits = c(-1, 1)) +
scale_x_discrete(breaks = unique(lab.hm.melted$taxon), labels = unique(lab.hm.melted$taxon),
limits = rev(levels(lab.hm.melted$taxon))) +
scale_y_discrete(position = "right") +
theme_minimal() +
theme(legend.position = "bottom", legend.direction = "horizontal",
legend.title = element_text(size = 10), legend.key.height = unit(0.5,"cm"),
legend.key.width = unit(1, "cm"), legend.text = element_text(size = 7)) +
guides(fill = guide_colorbar(title.position = "top", title.hjust = 0.5)) +
coord_flip()
lab.l <- get_legend(lab.hm)
lab.hm.clean <- lab.hm +
theme(axis.title.y = element_blank(), axis.text.y = element_text(margin = margin(c(0,-5,0,0)),
size = 3),
axis.ticks.y = element_blank(), axis.ticks.x = element_blank(),
panel.grid.major = element_blank(), legend.position="none",
axis.text.x.top = element_text(size = 6, margin = margin(c(0,0,-2,0))),
plot.margin = margin(c(0,-2,0,5))) +
labs(y = "Group")
lab.bp.y <- ggplot(data = lab_mp_results, aes(x = taxon, y = RelAbundance)) +
geom_bar(stat = "identity", fill = "grey") +
scale_y_continuous(position = "right") +
scale_x_discrete(limits = rev(levels(lab_mp_results$taxon))) +
coord_flip() +
theme_minimal() +
theme(axis.title.y = element_blank(), axis.text.y = element_blank(),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
legend.position="none", plot.margin = margin(c(0,5,0,-5)),
axis.text.x.top = element_text(size = 6, margin = margin(c(0,0,-2,0)))) +
labs(y = "Rel. abund. (%)")
pdf("InitialFigs/Comb_Lab_Multipatt.pdf", width = 8, height = 10)
plot_grid(lab.hm.clean, lab.bp.y, lab.l, NULL, nrow = 2, ncol = 2,
rel_widths = c(10,2), rel_heights = c(12, 2), align = "hv", axis = "b")
dev.off()
lab.hm.clean <- lab.hm +
theme(axis.title.y = element_blank(), axis.text.y = element_text(margin = margin(c(0,-10,0,0)),
size = 2),
axis.ticks.y = element_blank(), axis.ticks.x = element_blank(),
panel.grid.major = element_blank(), legend.position="none",
axis.text.x.top = element_text(size = 6, margin = margin(c(0,0,-2,0))),
plot.margin = margin(c(0,-2,0,5))) +
labs(y = "Group")
lab.bp.y <- ggplot(data = lab_mp_results, aes(x = taxon, y = RelAbundance)) +
geom_bar(stat = "identity", fill = "grey") +
scale_y_continuous(position = "right") +
scale_x_discrete(limits = rev(levels(lab_mp_results$taxon))) +
coord_flip() +
theme_minimal() +
theme(axis.title.y = element_blank(), axis.text.y = element_blank(),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
legend.position="none", plot.margin = margin(c(0,5,0,-5)),
axis.text.x.top = element_text(size = 6, margin = margin(c(0,0,-2,0)))) +
labs(y = "Rel. abund. (%)")
pdf("InitialFigs/Comb_Lab_Multipatt.pdf", width = 8, height = 10)
plot_grid(lab.hm.clean, lab.bp.y, lab.l, NULL, nrow = 2, ncol = 2,
rel_widths = c(10,2), rel_heights = c(12, 2), align = "hv", axis = "b")
dev.off()
lab.hm.clean <- lab.hm +
theme(axis.title.y = element_blank(), axis.text.y = element_text(margin = margin(c(0,-15,0,0)),
size = 2),
axis.ticks.y = element_blank(), axis.ticks.x = element_blank(),
panel.grid.major = element_blank(), legend.position="none",
axis.text.x.top = element_text(size = 6, margin = margin(c(0,0,-2,0))),
plot.margin = margin(c(0,-2,0,5))) +
labs(y = "Group")
lab.bp.y <- ggplot(data = lab_mp_results, aes(x = taxon, y = RelAbundance)) +
geom_bar(stat = "identity", fill = "grey") +
scale_y_continuous(position = "right") +
scale_x_discrete(limits = rev(levels(lab_mp_results$taxon))) +
coord_flip() +
theme_minimal() +
theme(axis.title.y = element_blank(), axis.text.y = element_blank(),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
legend.position="none", plot.margin = margin(c(0,5,0,-5)),
axis.text.x.top = element_text(size = 6, margin = margin(c(0,0,-2,0)))) +
labs(y = "Rel. abund. (%)")
pdf("InitialFigs/Comb_Lab_Multipatt.pdf", width = 8, height = 10)
plot_grid(lab.hm.clean, lab.bp.y, lab.l, NULL, nrow = 2, ncol = 2,
rel_widths = c(10,2), rel_heights = c(12, 2), align = "hv", axis = "b")
dev.off()
lab.hm.clean <- lab.hm +
theme(axis.title.y = element_blank(), axis.text.y = element_text(margin = margin(c(0,-20,0,0)),
size = 2),
axis.ticks.y = element_blank(), axis.ticks.x = element_blank(),
panel.grid.major = element_blank(), legend.position="none",
axis.text.x.top = element_text(size = 6, margin = margin(c(0,0,-2,0))),
plot.margin = margin(c(0,-2,0,5))) +
labs(y = "Group")
lab.bp.y <- ggplot(data = lab_mp_results, aes(x = taxon, y = RelAbundance)) +
geom_bar(stat = "identity", fill = "grey") +
scale_y_continuous(position = "right") +
scale_x_discrete(limits = rev(levels(lab_mp_results$taxon))) +
coord_flip() +
theme_minimal() +
theme(axis.title.y = element_blank(), axis.text.y = element_blank(),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
legend.position="none", plot.margin = margin(c(0,5,0,-5)),
axis.text.x.top = element_text(size = 6, margin = margin(c(0,0,-2,0)))) +
labs(y = "Rel. abund. (%)")
pdf("InitialFigs/Comb_Lab_Multipatt.pdf", width = 8, height = 10)
plot_grid(lab.hm.clean, lab.bp.y, lab.l, NULL, nrow = 2, ncol = 2,
rel_widths = c(10,2), rel_heights = c(12, 2), align = "hv", axis = "b")
dev.off()
input_filt <- readRDS("input_filt.rds")
detra <- filter_data(input_filt,
filter_cat = "Estuary",
keep_vals = "Delaware")
detra <- filter_data(detra,
filter_cat = "Experiment",
keep_vals = c("Soil mesocosm"))
set.seed(530)
detra <- single_rarefy(detra, min(colSums(detra$data_loaded))) # 26450
detra$map_loaded <- detra$map_loaded %>%
mutate(rich = specnumber(detra$data_loaded, MARGIN = 2),
shannon = diversity(detra$data_loaded, index = "shannon", MARGIN = 2),
Treatment = factor(Treatment,
levels = c("TFM1", "TFM2", "TFM1@TFM2",
"TFM1@OligoHal", "OligoHal.", "TFM1@MesoHal",
"MesoHal", "TFM1-40cm", "TFM2-40cm",
"TFM1@TFM2-40cm", "TFM1@OligoHal-40cm",
"OligoHal-40cm", "TFM1@MesoHal-40cm",
"MesoHal-40cm"))) %>%
unite("TrtDepth", c("Treatment", "Depth"), sep = "", remove = F) %>%
separate(Treatment, into = c("Treatment2", "Level"), sep = "-", remove = F) %>%
mutate(Treatment2 = gsub("\\.", "", Treatment2)) %>%
replace_na(list(Level = "0cm")) %>%
mutate(Depth = as.factor(Depth),
Level = as.factor(Level),
Treatment2 = factor(Treatment2,
levels = c("TFM1", "TFM2", "TFM1@TFM2", "TFM1@OligoHal",
"OligoHal", "TFM1@MesoHal", "MesoHal"))) %>%
mutate(Treatment3 = paste(Treatment2, Level, sep = "_")) %>%
mutate_if(is.character, as.factor)
#### __Alpha ####
leveneTest(detra$map_loaded$rich ~ detra$map_loaded$Treatment) # Homogeneous
m <- aov(rich ~ Treatment + Depth, data = detra$map_loaded)
Anova(m, type = "III") # Treatment and Depth
#### __Alpha ####
leveneTest(detra$map_loaded$rich ~ detra$map_loaded$Treatment) # Homogeneous
m <- aov(rich ~ Treatment + Depth, data = detra$map_loaded)
Anova(m, type = "II") # Treatment and Depth
m <- aov(rich ~ Treatment, data = detra$map_loaded)
shapiro.test(m$residuals) # Not normal
summary(m)
t <- emmeans(object = m, specs = "Treatment") %>%
cld(object = ., adjust = "Tukey", Letters = letters, alpha = 0.05) %>%
mutate(name = "rich",
y = max(detra$map_loaded$rich)+(max(detra$map_loaded$rich)-min(detra$map_loaded$rich))/20)
View(t)
TukeyHSD(m)
leveneTest(detra$map_loaded$shannon ~ detra$map_loaded$Treatment) # Homogeneous
m1 <- aov(shannon ~ Treatment + Depth, data = detra$map_loaded)
Anova(m1, type = "II") # Depth
m1 <- aov(shannon ~ Treatment, data = detra$map_loaded)
shapiro.test(m1$residuals)
summary(m1)
t1 <- emmeans(object = m1, specs = "Treatment") %>%
cld(object = ., adjust = "Tukey", Letters = letters, alpha = 0.05) %>%
mutate(name = "shannon",
y = max(detra$map_loaded$shannon)+(max(detra$map_loaded$shannon)-min(detra$map_loaded$shannon))/20)
View(t1)
summary(m1)
detra$map_loaded$shannon
m <- aov(rich ~ Treatment, data = detra$map_loaded)
summary(m)
m1 <- aov(shannon ~ Treatment, data = detra$map_loaded)
summary(m1)
TukeyHSD(m1)
