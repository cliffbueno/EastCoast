geom_text(data = vec.df_sc,
aes(x = Dim1, y = Dim2, label = shortnames),
size = 2, color = "black") +
labs(x = paste("PC1: ", pcoaA1, "%", sep = ""),
y = paste("PC2: ", pcoaA2, "%", sep = "")) +
scale_colour_manual(values = c("blue", "red")) +
scale_fill_manual(values = c("black", "white")) +
theme_bw() +
ggtitle("(d) Waccamaw (field exp.)") +
theme(legend.position = "none",
axis.title = element_text(size = 10),
axis.text = element_text(size = 10),
plot.title = element_text(vjust = -0.5, size = 12),
plot.margin = margin(0,0,0,10, "pt"))
g4
# Note: in initial analysis, thought there was error, but looks like maybe there isn't
# Just not clear separation, no hard evidence of any sample label error
bc_deinc <- calc_dm(deinc$data_loaded)
env_deinc <- deinc$map_loaded %>%
dplyr::select(Salinity_ppt_all,
NH4_mgL, PO4_mgL, Cl_mgL, SO4_mgL,
Fe_mgL, Porosity, Acetate_mgL, TotalVFA_uM, SR_umol_cm3_d, AMG_umol_cm3_d)
env_nona_deinc <- na.omit(env_deinc) # n = 8
pcoa_deinc <- cmdscale(bc_deinc, k = nrow(deinc$map_loaded) - 1, eig = T)
set.seed(100)
ef_deinc <- envfit(pcoa_deinc, env_deinc, permutations = 999, na.rm = TRUE)
ef_deinc
ordiplot(pcoa_deinc)
plot(ef_deinc, p.max = 0.05, cex = 0.5)
manual_factor_deinc <- 0.5
pcoaA1 <- round((eigenvals(pcoa_deinc)/sum(eigenvals(pcoa_deinc)))[1]*100, digits = 1)
pcoaA2 <- round((eigenvals(pcoa_deinc)/sum(eigenvals(pcoa_deinc)))[2]*100, digits = 1)
deinc$map_loaded$Axis01 <- scores(pcoa_deinc)[,1]
deinc$map_loaded$Axis02 <- scores(pcoa_deinc)[,2]
micro.hulls <- ddply(deinc$map_loaded, c("Salt"), find_hull)
g5 <- ggplot(deinc$map_loaded, aes(Axis01, Axis02)) +
geom_polygon(data = micro.hulls,
aes(colour = Salt), fill = NA,
alpha = 0.1, show.legend = F) +
geom_point(size = 3, alpha = 0.5, aes(colour = Salt, fill = Depth), shape = 23,
show.legend = F) +
#  geom_segment(data = vec.df_deinc,
#               aes(x = 0, xend = Dim1, y = 0, yend = Dim2),
#               arrow = arrow(length = unit(0.5, "cm")),
#               colour = "gray", alpha = 0.5,
#               inherit.aes = FALSE) +
#  geom_text(data = vec.df_deinc,
#            aes(x = Dim1, y = Dim2, label = shortnames),
#            size = 2, color = "black") +
labs(x = paste("PC1: ", pcoaA1, "%", sep = ""),
y = paste("PC2: ", pcoaA2, "%", sep = "")) +
scale_colour_manual(values = c("blue", "red")) +
scale_fill_manual(values = c("black", "white")) +
theme_bw() +
ggtitle("(e) Delaware (lab exp.)") +
theme(legend.position = "none",
axis.title = element_text(size = 10),
axis.text = element_text(size = 10),
plot.title = element_text(vjust = -0.5, size = 12),
plot.margin = margin(0,0,0,10, "pt"))
g5
bc_nc <- calc_dm(nc$data_loaded)
pcoa_nc <- cmdscale(bc_nc, k = nrow(nc$map_loaded) - 1, eig = T)
set.seed(100)
ef_nc <- envfit(pcoa_nc, env_nc, permutations = 999, na.rm = TRUE)
ef_nc
ordiplot(pcoa_nc)
plot(ef_nc, p.max = 0.05, cex = 0.5)
manual_factor_nc <- 0.33
vec.df_nc <- as.data.frame(ef_nc$vectors$arrows*sqrt(ef_nc$vectors$r)) %>%
mutate(Dim1 = Dim1 * manual_factor_nc,
Dim2 = Dim2 * manual_factor_nc) %>%
mutate(variables = rownames(.)) %>%
filter(ef_nc$vectors$pvals < 0.05) %>%
filter(variables != "Cl_mgL") %>%
mutate(shortnames = c("CH4", "CO2", "N2O", "Salinity", "NH4", "Br"))
pcoaA1 <- round((eigenvals(pcoa_nc)/sum(eigenvals(pcoa_nc)))[1]*100, digits = 1)
pcoaA2 <- round((eigenvals(pcoa_nc)/sum(eigenvals(pcoa_nc)))[2]*100, digits = 1)
nc$map_loaded$Axis01 <- scores(pcoa_nc)[,1]
nc$map_loaded$Axis02 <- scores(pcoa_nc)[,2]
micro.hulls <- ddply(nc$map_loaded, c("Salt"), find_hull)
g6 <- ggplot(nc$map_loaded, aes(Axis01, Axis02)) +
geom_polygon(data = micro.hulls,
aes(colour = Salt), fill = NA,
alpha = 0.1, show.legend = F) +
geom_point(size = 3, alpha = 0.5, aes(colour = Salt, fill = Depth), shape = 22,
show.legend = F) +
geom_segment(data = vec.df_nc,
aes(x = 0, xend = Dim1, y = 0, yend = Dim2),
arrow = arrow(length = unit(0.35, "cm")),
colour = "gray", alpha = 0.5,
inherit.aes = FALSE) +
geom_text(data = vec.df_nc,
aes(x = Dim1, y = Dim2, label = shortnames),
size = 2, color = "black") +
labs(x = paste("PC1: ", pcoaA1, "%", sep = ""),
y = paste("PC2: ", pcoaA2, "%", sep = "")) +
scale_colour_manual(values = c("blue", "red")) +
scale_fill_manual(values = c("black", "white")) +
theme_bw() +
ggtitle("(f) Alligator (lab exp.)") +
theme(legend.position = "none",
axis.title = element_text(size = 10),
axis.text = element_text(size = 10),
plot.title = element_text(vjust = -0.5, size = 12),
plot.margin = margin(0,0,0,10, "pt"))
g6
comm_nona_nc <- as.data.frame(t(nc$data_loaded)) %>%
filter(rownames(.) %in% rownames(env_nona_nc))
mod0 <- rda(comm_nona_nc ~ 1, env_nona_nc)  # Model with intercept only
mod1 <- rda(comm_nona_nc ~ ., env_nona_nc)  # Model with all explanatory variables
mod <- ordistep(mod0, scope = formula(mod1))
mod
mod$anova # SO4, CH4, PO4
# Get all corrs
sf_cor <- multiple_correlations(env_nona = env_nona_sf, var = "CH4_ug_m2_h") %>%
dplyr::select(Variable, rho, SpearmanPcut)
sf_corG <- meth_corr_by_taxonomy(input = sf, level = 9, threshold = 0, data = "Yes") %>%
rename(Variable = Taxon) %>%
dplyr::select(Variable, rho, SpearmanPcut)
sf_corP <- meth_corr_by_taxonomy(input = sf, level = 2, threshold = 0.5, data = "Yes") %>%
rename(Variable = Taxon) %>%
dplyr::select(Variable, rho, SpearmanPcut)
sf_corMGMT <- cor.test(sf$map_loaded$MG_MT, sf$map_loaded$CH4_ug_m2_h, method = "spearman")
sf_res <- rbind(sf_cor, sf_corG, sf_corP) %>%
add_row("Variable" = "MG:MT", "rho" = round(sf_corMGMT$estimate, digits = 2), "SpearmanPcut" = "Pfdr < 0.05") %>%
rename(SF_rho = rho,
SF_sig = SpearmanPcut)
sf_res$Variable <- replace(sf_res$Variable, sf_res$Variable == "sed_pH" , "pH")
# Note, DE is just field, because no lab methane data yet
detra_cor <- multiple_correlations(env_nona = env_nona_detra, var = "CH4_ug_m2_h") %>%
dplyr::select(Variable, rho, SpearmanPcut)
detra_corG <- meth_corr_by_taxonomy(input = detra, level = 9, threshold = 0, data = "Yes") %>%
rename(Variable = Taxon) %>%
dplyr::select(Variable, rho, SpearmanPcut)
detra_corP <- meth_corr_by_taxonomy(input = detra, level = 2, threshold = 0.5, data = "Yes") %>%
rename(Variable = Taxon) %>%
dplyr::select(Variable, rho, SpearmanPcut)
detra_corMGMT <- cor.test(detra$map_loaded$MG_MT, detra$map_loaded$CH4_ug_m2_h, method = "spearman")
de_res <- rbind(detra_cor, detra_corG, detra_corP) %>%
add_row("Variable" = "MG:MT", "rho" = round(detra_corMGMT$estimate, digits = 2), "SpearmanPcut" = "Pfdr > 0.05") %>%
rename(DE_rho = rho,
DE_sig = SpearmanPcut)
nc_cor <- multiple_correlations(env_nona = env_nona_nc, var = "CH4_ug_m2_h") %>%
dplyr::select(Variable, rho, SpearmanPcut)
nc_corG <- meth_corr_by_taxonomy(input = nc, level = 9, threshold = 0, data = "Yes") %>%
rename(Variable = Taxon) %>%
dplyr::select(Variable, rho, SpearmanPcut)
nc_corP <- meth_corr_by_taxonomy(input = nc, level = 2, threshold = 0.5, data = "Yes") %>%
rename(Variable = Taxon) %>%
dplyr::select(Variable, rho, SpearmanPcut)
nc_corMGMT <- cor.test(nc$map_loaded$MG_MT, nc$map_loaded$CH4_ug_m2_h, method = "spearman")
nc_res <- rbind(nc_cor, nc_corG, nc_corP) %>%
add_row("Variable" = "MG:MT", "rho" = round(nc_corMGMT$estimate, digits = 2), "SpearmanPcut" = "Pfdr > 0.05") %>%
rename(AL_rho = rho,
AL_sig = SpearmanPcut)
sc_cor <- multiple_correlations(env_nona = env_nona_sc, var = "CH4_ug_m2_h") %>%
dplyr::select(Variable, rho, SpearmanPcut)
sc_corG <- meth_corr_by_taxonomy(input = sc, level = 9, threshold = 0, data = "Yes") %>%
rename(Variable = Taxon) %>%
dplyr::select(Variable, rho, SpearmanPcut)
sc_corP <- meth_corr_by_taxonomy(input = sc, level = 2, threshold = 0.5, data = "Yes") %>%
rename(Variable = Taxon) %>%
dplyr::select(Variable, rho, SpearmanPcut)
sc_corMGMT <- cor.test(sc$map_loaded$MG_MT, sc$map_loaded$CH4_ug_m2_h, method = "spearman")
sc_res <- rbind(sc_cor, sc_corG, sc_corP) %>%
add_row("Variable" = "MG:MT", "rho" = round(sc_corMGMT$estimate, digits = 2), "SpearmanPcut" = "Pfdr > 0.05") %>%
rename(WA_rho = rho,
WA_sig = SpearmanPcut)
# Make df
# Prep. data frame
CH4_res <- data.frame("Variable" = c("CH4_H2", "CH4_ac", "CH4_me", "CH4_mix", "MG:MT",
"ANME", "MOB_I", "MOB_II", "MOB_IIa",
"Salinity_ppt_all", "NO3_mgL", "sed_NO3_mgL",
"N2O_ug_m2_h", "SRP_umol_m2_h", "SO4_mgL",
"sed_SO4_mgL", "SRB", "Fe_mgL", "sed_Fe_mgL",
"FeRB", "Mn_mgL", "sed_Mn_mgL",
"CO2_ug_m2_h", "sed_per_org", "DOC_mgL",
"TOC_mgL", "sed_per_C", "sed_CN",
"sed_per_N", "DON_mgL", "DIN_mgL", "TN_mgL",
"NH4_mgL", "sed_NH4_mgL", "PO4_mgL", "sed_PO4_mgL",
"pH", "Firmicutes", "Actinobacteriota"),
"Shortname" = c("CH4_H2", "CH4_ac", "CH4_me", "CH4_mix", "MG:MT",
"ANME", "MOB_I", "MOB_II", "MOB_IIa",
"Salinity", "NO3", "NO3_s",
"N2O Flux", "SR", "SO4", "SO4_s", "SRB",
"Fe", "Fe_s", "FeRB", "Mn", "Mn_s",
"CO2 Flux", "SOM", "DOC", "TOC", "C", "C:N",
"N", "DON", "DIN", "TN", "NH4", "NH4_s", "PO4",
"PO4_s", "pH", "Firmicutes", "Actinobacteriota"),
"Type" = c("Sediment", "Sediment", "Sediment", "Sediment", "Sediment",
"Sediment", "Sediment", "Sediment", "Sediment",
"Porewater", "Porewater", "Sediment", "Flux",
"Porewater", "Porewater", "Sediment", "Sediment",
"Porewater", "Sediment", "Sediment", "Porewater",
"Sediment",
"Flux", "Sediment", "Porewater", "Porewater",
"Sediment", "Sediment", "Sediment", "Porewater",
"Porewater", "Porewater", "Porewater", "Sediment",
"Porewater", "Sediment", "Porewater", "Sediment", "Sediment"),
"Prediction" = c("Positive", "Positive", "Positive", "Positive", "Positive",
"Negative", "Negative", "Negative", "Negative",
"Negative", "Negative", "Negative", "Negative",
"Negative", "Negative", "Negative", "Negative",
"Negative", "Negative", "Negative", "Negative",
"Negative",
"Positive", "Positive", "Positive", "Positive",
"Positive", "Negative", "Positive", "Positive",
"Positive", "Positive", "Positive", "Positive",
"Positive", "Positive", "Positive", "Positive", "Positive"),
"Variable Type" = c("Microbial", "Microbial", "Microbial", "Microbial", "Microbial",
"Microbial", "Microbial", "Microbial", "Microbial",
"Chemical", "Chemical", "Chemical", "Chemical",
"Chemical", "Chemical", "Chemical", "Microbial",
"Chemical", "Chemical", "Microbial", "Chemical",
"Chemical",
"Chemical", "Chemical", "Chemical", "Chemical",
"Chemical", "Chemical", "Chemical", "Chemical",
"Chemical", "Chemical", "Chemical", "Chemical",
"Chemical", "Chemical", "Chemical", "Microbial", "Microbial"),
"Hypothesis" = c("Methanogens", "Methanogens", "Methanogens", "Methanogens", "Methanogens",
"Methanotrophs", "Methanotrophs", "Methanotrophs", "Methanotrophs",
"Alternate e-", "Alternate e-", "Alternate e-", "Alternate e-",
"Alternate e-", "Alternate e-", "Alternate e-", "Alternate e-",
"Alternate e-", "Alternate e-", "Alternate e-", "Alternate e-",
"Alternate e-",
"Decomposition", "Decomposition", "Decomposition", "Decomposition",
"Decomposition", "Decomposition", "Decomposition", "Decomposition",
"Decomposition", "Decomposition", "Decomposition", "Decomposition",
"Decomposition", "Decomposition", "Decomposition", "Decomposition",
"Decomposition")) %>%
left_join(., sf_res, by = "Variable") %>%
left_join(., de_res, by = "Variable") %>%
left_join(., nc_res, by = "Variable") %>%
left_join(., sc_res, by = "Variable")
# Pretty heatmap
CH4_res_meta <- CH4_res %>%
dplyr::select(Shortname, Type, Variable.Type, Hypothesis, Prediction, SF_sig, WA_sig, DE_sig, AL_sig) %>%
mutate_if(is.character, as.factor)
CH4_res_mat <- CH4_res %>%
column_to_rownames(var = "Shortname") %>%
dplyr::select(SF_rho, WA_rho, DE_rho, AL_rho) %>%
as.matrix()
ann_rows <- data.frame(row.names = rownames(CH4_res_mat),
"AL_sig" = CH4_res_meta$`AL_sig`,
"DE_sig" = CH4_res_meta$`DE_sig`,
"WA_sig" = CH4_res_meta$`WA_sig`,
"SF_sig" = CH4_res_meta$`SF_sig`,
Prediction = CH4_res_meta$Prediction,
Hypothesis = CH4_res_meta$Hypothesis,
Variable = CH4_res_meta$Variable.Type,
Type = CH4_res_meta$Type)
ann_colors <- list(Type = c(Flux = "#FFFF99",
Porewater = "#A6CEE3",
Sediment = "#B15928"),
Variable = c(Chemical = "#440154FF",
Microbial = "#FDE725FF"),
Hypothesis = c(Methanogens = "#F8766D",
Methanotrophs = "#7CAE00",
`Alternate e-` = "#00BFC4",
Decomposition = "#C77CFF"),
Prediction = c(Positive = "red",
Negative = "blue"),
"SF_sig" = c(`Pfdr < 0.05` = "black",
`Pfdr > 0.05` = "white"),
"DE_sig" = c(`Pfdr < 0.05` = "black",
`Pfdr > 0.05` = "white"),
"AL_sig" = c(`Pfdr < 0.05` = "black",
`Pfdr > 0.05` = "white"),
"WA_sig" = c(`Pfdr < 0.05` = "black",
`Pfdr > 0.05` = "white"))
pheatmap(CH4_res_mat,
legend = T,
legend_breaks = c(-0.5, 0, 0.5, max(na.omit(CH4_res_mat))),
legend_labels = c("-0.5", "0", "0.5", "rho\n"),
main = "",
#color = bluered(100),
#border_color = NA,
#na_col = "gray",
scale = "none",
angle_col = 315,
fontsize = 6,
fontsize_row = 9,
fontsize_col = 9,
annotation_row = ann_rows,
annotation_colors = ann_colors,
cluster_rows = F,
cluster_cols = F,
gaps_row = c(5, 9, 22))
pheatmap(CH4_res_mat,
legend = T,
legend_breaks = c(-0.5, 0, 0.5, max(na.omit(CH4_res_mat))),
legend_labels = c("-0.5", "0", "0.5", "rho\n"),
main = "",
#color = bluered(100),
#border_color = NA,
#na_col = "gray",
scale = "none",
angle_col = 315,
fontsize = 6,
fontsize_row = 9,
fontsize_col = 9,
annotation_row = ann_rows,
annotation_colors = ann_colors,
cluster_rows = F,
cluster_cols = F,
gaps_row = c(5, 9, 22),
filename = "FinalFigs/Figure4.png",
width = 5,
height = 7)
dev.off()
dev.set(dev.next())
dev.set(dev.next())
# Get all corrs
sf_cor <- multiple_correlations(env_nona = env_nona_sf, var = "Salinity_ppt_all") %>%
dplyr::select(Variable, rho, SpearmanPcut)
sf_corG <- meth_corr_by_taxonomy(input = sf, level = 9, threshold = 0, data = "Yes") %>%
rename(Variable = Taxon) %>%
dplyr::select(Variable, rho, SpearmanPcut)
sf_corP <- meth_corr_by_taxonomy(input = sf, level = 2, threshold = 0.5, data = "Yes") %>%
rename(Variable = Taxon) %>%
dplyr::select(Variable, rho, SpearmanPcut)
sf_corMGMT <- cor.test(sf$map_loaded$MG_MT, sf$map_loaded$Salinity_ppt_all, method = "spearman")
sf_res <- rbind(sf_cor, sf_corG, sf_corP) %>%
add_row("Variable" = "MG:MT", "rho" = round(sf_corMGMT$estimate, digits = 2), "SpearmanPcut" = "Pfdr > 0.05") %>%
rename(SF_rho = rho,
SF_sig = SpearmanPcut)
sf_res$Variable <- replace(sf_res$Variable, sf_res$Variable == "sed_pH" , "pH")
# Note, DE is just field, because no lab methane data yet
detra_cor <- multiple_correlations(env_nona = env_nona_detra, var = "Salinity_ppt_all") %>%
dplyr::select(Variable, rho, SpearmanPcut)
detra_corG <- meth_corr_by_taxonomy(input = detra, level = 9, threshold = 0, data = "Yes") %>%
rename(Variable = Taxon) %>%
dplyr::select(Variable, rho, SpearmanPcut)
detra_corP <- meth_corr_by_taxonomy(input = detra, level = 2, threshold = 0.5, data = "Yes") %>%
rename(Variable = Taxon) %>%
dplyr::select(Variable, rho, SpearmanPcut)
detra_corMGMT <- cor.test(detra$map_loaded$MG_MT, detra$map_loaded$Salinity_ppt_all, method = "spearman")
de_res <- rbind(detra_cor, detra_corG, detra_corP) %>%
add_row("Variable" = "MG:MT", "rho" = round(detra_corMGMT$estimate, digits = 2), "SpearmanPcut" = "Pfdr > 0.05") %>%
rename(DE_rho = rho,
DE_sig = SpearmanPcut)
nc_cor <- multiple_correlations(env_nona = env_nona_nc, var = "Salinity_ppt_all") %>%
dplyr::select(Variable, rho, SpearmanPcut)
nc_corG <- meth_corr_by_taxonomy(input = nc, level = 9, threshold = 0, data = "Yes") %>%
rename(Variable = Taxon) %>%
dplyr::select(Variable, rho, SpearmanPcut)
nc_corP <- meth_corr_by_taxonomy(input = nc, level = 2, threshold = 0.5, data = "Yes") %>%
rename(Variable = Taxon) %>%
dplyr::select(Variable, rho, SpearmanPcut)
nc_corMGMT <- cor.test(nc$map_loaded$MG_MT, nc$map_loaded$Salinity_ppt_all, method = "spearman")
nc_res <- rbind(nc_cor, nc_corG, nc_corP) %>%
add_row("Variable" = "MG:MT", "rho" = round(nc_corMGMT$estimate, digits = 2), "SpearmanPcut" = "Pfdr < 0.05") %>%
rename(AL_rho = rho,
AL_sig = SpearmanPcut)
sc_cor <- multiple_correlations(env_nona = env_nona_sc, var = "Salinity_ppt_all") %>%
dplyr::select(Variable, rho, SpearmanPcut)
sc_corG <- meth_corr_by_taxonomy(input = sc, level = 9, threshold = 0, data = "Yes") %>%
rename(Variable = Taxon) %>%
dplyr::select(Variable, rho, SpearmanPcut)
sc_corP <- meth_corr_by_taxonomy(input = sc, level = 2, threshold = 0.5, data = "Yes") %>%
rename(Variable = Taxon) %>%
dplyr::select(Variable, rho, SpearmanPcut)
sc_corMGMT <- cor.test(sc$map_loaded$MG_MT, sc$map_loaded$Salinity_ppt_all, method = "spearman")
sc_res <- rbind(sc_cor, sc_corG, sc_corP) %>%
add_row("Variable" = "MG:MT", "rho" = round(sc_corMGMT$estimate, digits = 2), "SpearmanPcut" = "Pfdr > 0.05") %>%
rename(WA_rho = rho,
WA_sig = SpearmanPcut)
# Make df
# Prep. data frame
Sal_res <- data.frame("Variable" = c("CH4_H2", "CH4_ac", "CH4_me", "CH4_mix", "MG:MT",
"ANME", "MOB_I", "MOB_II", "MOB_IIa",
"NO3_mgL", "sed_NO3_mgL",
"N2O_ug_m2_h", "SRP_umol_m2_h", "SO4_mgL",
"sed_SO4_mgL", "SRB", "Fe_mgL", "sed_Fe_mgL",
"FeRB", "Mn_mgL", "sed_Mn_mgL",
"CH4_ug_m2_h", "CO2_ug_m2_h", "sed_per_org", "DOC_mgL",
"TOC_mgL", "sed_per_C", "sed_CN",
"sed_per_N", "DON_mgL", "DIN_mgL", "TN_mgL",
"NH4_mgL", "sed_NH4_mgL", "PO4_mgL", "sed_PO4_mgL",
"pH", "Firmicutes", "Actinobacteriota"),
"Shortname" = c("CH4_H2", "CH4_ac", "CH4_me", "CH4_mix", "MG:MT",
"ANME", "MOB_I", "MOB_II", "MOB_IIa",
"NO3", "NO3_s",
"N2O Flux", "SR", "SO4", "SO4_s", "SRB",
"Fe", "Fe_s", "FeRB", "Mn", "Mn_s",
"CH4 Flux", "CO2 Flux", "SOM", "DOC", "TOC", "C", "C:N",
"N", "DON", "DIN", "TN", "NH4", "NH4_s", "PO4",
"PO4_s", "pH", "Firmicutes", "Actinobacteriota"),
"Type" = c("Sediment", "Sediment", "Sediment", "Sediment", "Sediment",
"Sediment", "Sediment", "Sediment", "Sediment",
"Porewater", "Sediment", "Flux",
"Porewater", "Porewater", "Sediment", "Sediment",
"Porewater", "Sediment", "Sediment", "Porewater",
"Sediment",
"Flux", "Flux", "Sediment", "Porewater", "Porewater",
"Sediment", "Sediment", "Sediment", "Porewater",
"Porewater", "Porewater", "Porewater", "Sediment",
"Porewater", "Sediment", "Porewater", "Sediment", "Sediment"),
"Prediction" = c("Negative", "Negative", "Negative", "Negative", "Negative",
"Negative", "Negative", "Negative", "Negative",
"Positive", "Positive", "Positive",
"Positive", "Positive", "Positive", "Positive",
"Positive", "Positive", "Positive", "Positive",
"Positive",
"Negative", "Positive", "Positive", "Positive", "Positive",
"Positive", "Negative", "Positive", "Positive",
"Positive", "Positive", "Positive", "Positive",
"Positive", "Positive", "Positive", "Positive", "Positive"),
"Variable Type" = c("Microbial", "Microbial", "Microbial", "Microbial", "Microbial",
"Microbial", "Microbial", "Microbial", "Microbial",
"Chemical", "Chemical", "Chemical",
"Chemical", "Chemical", "Chemical", "Microbial",
"Chemical", "Chemical", "Microbial", "Chemical",
"Chemical",
"Chemical", "Chemical", "Chemical", "Chemical", "Chemical",
"Chemical", "Chemical", "Chemical", "Chemical",
"Chemical", "Chemical", "Chemical", "Chemical",
"Chemical", "Chemical", "Chemical", "Microbial", "Microbial"),
"Hypothesis" = c("Methanogens", "Methanogens", "Methanogens", "Methanogens", "Methanogens",
"Methanotrophs", "Methanotrophs", "Methanotrophs", "Methanotrophs",
"Alternate e-", "Alternate e-", "Alternate e-",
"Alternate e-", "Alternate e-", "Alternate e-", "Alternate e-",
"Alternate e-", "Alternate e-", "Alternate e-", "Alternate e-",
"Alternate e-",
"Decomposition", "Decomposition", "Decomposition", "Decomposition", "Decomposition",
"Decomposition", "Decomposition", "Decomposition", "Decomposition",
"Decomposition", "Decomposition", "Decomposition", "Decomposition",
"Decomposition", "Decomposition", "Decomposition", "Decomposition",
"Decomposition")) %>%
left_join(., sf_res, by = "Variable") %>%
left_join(., de_res, by = "Variable") %>%
left_join(., nc_res, by = "Variable") %>%
left_join(., sc_res, by = "Variable")
# Pretty heatmap
Sal_res_meta <- Sal_res %>%
dplyr::select(Shortname, Type, Variable.Type, Hypothesis, Prediction, SF_sig, WA_sig, DE_sig, AL_sig) %>%
mutate_if(is.character, as.factor)
Sal_res_mat <- Sal_res %>%
column_to_rownames(var = "Shortname") %>%
dplyr::select(SF_rho, WA_rho, DE_rho, AL_rho) %>%
as.matrix()
ann_rows <- data.frame(row.names = rownames(Sal_res_mat),
"AL_sig" = Sal_res_meta$`AL_sig`,
"DE_sig" = Sal_res_meta$`DE_sig`,
"WA_sig" = Sal_res_meta$`WA_sig`,
"SF_sig" = Sal_res_meta$`SF_sig`,
Prediction = Sal_res_meta$Prediction,
Hypothesis = Sal_res_meta$Hypothesis,
Variable = Sal_res_meta$Variable.Type,
Type = Sal_res_meta$Type)
ann_colors <- list(Type = c(Flux = "#FFFF99",
Porewater = "#A6CEE3",
Sediment = "#B15928"),
Variable = c(Chemical = "#440154FF",
Microbial = "#FDE725FF"),
Hypothesis = c(Methanogens = "#F8766D",
Methanotrophs = "#7CAE00",
`Alternate e-` = "#00BFC4",
Decomposition = "#C77CFF"),
Prediction = c(Positive = "red",
Negative = "blue"),
"SF_sig" = c(`Pfdr < 0.05` = "black",
`Pfdr > 0.05` = "white"),
"DE_sig" = c(`Pfdr < 0.05` = "black",
`Pfdr > 0.05` = "white"),
"AL_sig" = c(`Pfdr < 0.05` = "black",
`Pfdr > 0.05` = "white"),
"WA_sig" = c(`Pfdr < 0.05` = "black",
`Pfdr > 0.05` = "white"))
pheatmap(Sal_res_mat,
legend = T,
legend_breaks = c(-0.5, 0, 0.5, max(na.omit(Sal_res_mat))),
legend_labels = c("-0.5", "0", "0.5", "rho\n"),
main = "",
#color = bluered(100),
#border_color = NA,
#na_col = "gray",
scale = "none",
angle_col = 315,
fontsize = 6,
fontsize_row = 9,
fontsize_col = 9,
annotation_row = ann_rows,
annotation_colors = ann_colors,
cluster_rows = F,
cluster_cols = F,
gaps_row = c(5, 9, 21))
pheatmap(Sal_res_mat,
legend = T,
legend_breaks = c(-0.5, 0, 0.5, max(na.omit(Sal_res_mat))),
legend_labels = c("-0.5", "0", "0.5", "rho\n"),
main = "",
#color = bluered(100),
#border_color = NA,
#na_col = "gray",
scale = "none",
angle_col = 315,
fontsize = 6,
fontsize_row = 9,
fontsize_col = 9,
annotation_row = ann_rows,
annotation_colors = ann_colors,
cluster_rows = F,
cluster_cols = F,
gaps_row = c(5, 9, 21),
filename = "FinalFigs/FigureS2.png",
width = 5,
height = 7)
dev.off()
dev.set(dev.next())
dev.set(dev.next())
