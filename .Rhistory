m <- aov(rich ~ Estuary + Salt + Depth, data = frol$map_loaded)
shapiro.test(m$residuals) # Normally distributed
Anova(m, type = "II") # All sig.
install.packages("asbio")
library(asbio)
# Partial R2
all <- aov(rich ~ Estuary + Salt + Depth, data = frol$map_loaded)
noEst <- aov(rich ~ Salt + Depth, data = frol$map_loaded)
noSal <- aov(rich ~ Estuary + Depth, data = frol$map_loaded)
noDep <- aov(rich ~ Estuary + Salt, data = frol$map_loaded)
partial.R2(noEst, all)
partial.R2(noSal, all)
partial.R2(noDep, all)
all <- aov(shannon ~ Estuary + Salt + Depth, data = frol$map_loaded)
noEst <- aov(shannon ~ Salt + Depth, data = frol$map_loaded)
noSal <- aov(shannon ~ Estuary + Depth, data = frol$map_loaded)
noDep <- aov(shannon ~ Estuary + Salt, data = frol$map_loaded)
partial.R2(noEst, all)
partial.R2(noSal, all)
partial.R2(noDep, all)
m1 <- aov(shannon ~ Estuary + Salt + Depth, data = frol$map_loaded)
shapiro.test(m1$residuals) # Not normally distributed but using anyway
Anova(m1, type = "II") # All sig
m1 <- aov(shannon ~ EstSalt, data = frol$map_loaded)
shapiro.test(m1$residuals) # Not normal
summary(m1)
t1 <- emmeans(object = m1, specs = "EstSalt") %>%
cld(object = ., adjust = "Tukey", Letters = letters, alpha = 0.05) %>%
mutate(name = "shannon",
y = max(frol$map_loaded$shannon)+(max(frol$map_loaded$shannon)-min(frol$map_loaded$shannon))/20)
all <- aov(shannon ~ Estuary + Salt + Depth, data = frol$map_loaded)
# Combined Plot
label_df <- rbind(t, t1)
facet_df <- c("rich" = "(a) Richness",
"shannon" = "(b) Shannon")
alpha_long <- frol$map_loaded %>%
pivot_longer(cols = c("rich", "shannon"))
ggplot(alpha_long, aes(EstSalt, value)) +
geom_boxplot(outlier.shape = NA, aes(colour = Salt)) +
geom_jitter(size = 2, alpha = 0.75, width = 0.2,
aes(fill = Depth, shape = Estuary, colour = Salt)) +
geom_text(data = label_df, aes(EstSalt, y, label = str_trim(.group)),
size = 4, color = "black") +
labs(x = "Site",
colour = "Salinity",
fill = "Depth (cm)",
shape = "Site") +
scale_colour_manual(values = c("blue", "red")) +
scale_fill_manual(values = c("black", "white")) +
scale_shape_manual(values = c(21, 22, 23, 24)) +
guides(shape = guide_legend(order = 1,),
colour = guide_legend(order = 2),
fill = guide_legend(override.aes = list(shape = c(16, 1)), order = 3)) +
facet_wrap(~ name, ncol = 2, scales = "free_y", labeller = as_labeller(facet_df)) +
theme_bw() +
theme(legend.position = "right",
legend.spacing.y = unit(0.1, "cm"),
legend.margin = margin(0.25, 0, 0, -0.1, unit = "cm"),
legend.key.size = unit(0.4, "cm"),
axis.title = element_blank(),
axis.text.y = element_text(size = 10),
axis.text.x = element_text(size = 10, angle = 45, hjust = 1),
strip.text = element_text(size = 10),
plot.margin = margin(5, 5, 5, 25, "pt"))
#### _Beta  ####
# Bray-Curtis dissimilarity
bc <- calc_dm(frol$data_loaded)
# Stats
set.seed(100)
adonis2(bc ~ frol$map_loaded$Estuary + frol$map_loaded$Salt + frol$map_loaded$Depth) # Salt and Depth sig
anova(betadisper(bc, frol$map_loaded$Estuary)) # Dispersion not homogeneous
anova(betadisper(bc, frol$map_loaded$Salt)) # Dispersion not homogeneous
anova(betadisper(bc, frol$map_loaded$Depth)) # Dispersion homogeneous
# Get variables
env <- frol$map_loaded %>%
dplyr::select(CH4_ug_m2_h, Salinity_ppt_all)
env_nona <- na.omit(env) # n = 110
# Envfit
pcoa <- cmdscale(bc, k = nrow(frol$map_loaded) - 1, eig = T)
set.seed(100)
ef <- envfit(pcoa, env, permutations = 999, na.rm = TRUE)
ef
arrow_factor <- ordiArrowMul(ef)
manual_factor <- 0.8
vec.df <- as.data.frame(ef$vectors$arrows*sqrt(ef$vectors$r)) %>%
mutate(Dim1 = Dim1 * manual_factor,
Dim2 = Dim2 * manual_factor) %>%
mutate(variables = rownames(.)) %>%
filter(ef$vectors$pvals < 0.05) %>%
mutate(shortnames = c("CH4", "Salinity"))
# Plot with significant vectors
ordiplot(pcoa)
plot(ef, p.max = 0.05, cex = 0.5)
pcoaA1 <- round((eigenvals(pcoa)/sum(eigenvals(pcoa)))[1]*100, digits = 1)
pcoaA2 <- round((eigenvals(pcoa)/sum(eigenvals(pcoa)))[2]*100, digits = 1)
frol$map_loaded$Axis01 <- scores(pcoa)[,1]
frol$map_loaded$Axis02 <- scores(pcoa)[,2]
# Get legend
micro.hulls <- ddply(frol$map_loaded, c("Salt"), find_hull)
g_forleg <- ggplot(frol$map_loaded, aes(Axis01, Axis02)) +
geom_polygon(data = micro.hulls,
aes(colour = Salt), fill = NA,
alpha = 0.1, show.legend = F) +
geom_point(size = 3, alpha = 0.5, aes(fill = Depth, colour = Salt, shape = Estuary),
show.legend = T) +
labs(x = paste("PC1: ", pcoaA1, "%", sep = ""),
y = paste("PC2: ", pcoaA2, "%", sep = ""),
colour = "Salinity",
fill = "Depth (cm)",
shape = "Site") +
scale_colour_manual(values = c("blue", "red")) +
scale_fill_manual(values = c("black", "white")) +
scale_shape_manual(values = c(21, 22, 23, 24)) +
guides(shape = guide_legend(order = 1,),
colour = guide_legend(order = 2),
fill = guide_legend(override.aes = list(shape = c(16, 1)), order = 3)) +
theme_bw() +
theme(legend.position = "right",
legend.spacing.y = unit(0.1, "cm"),
legend.margin = margin(0.25, 0, 0, -0.1, unit = "cm"),
axis.title = element_text(face = "bold", size = 12),
axis.text = element_text(size = 10))
leg <- get_legend(g_forleg)
# Plot
micro.hulls <- ddply(frol$map_loaded, c("EstSalt"), find_hull)
g <- ggplot(frol$map_loaded, aes(Axis01, Axis02)) +
geom_polygon(data = micro.hulls,
aes(colour = EstSalt), fill = NA,
alpha = 0.1, show.legend = F) +
geom_point(size = 3, alpha = 0.5, aes(fill = Depth, colour = Salt, shape = Estuary),
show.legend = T) +
labs(x = paste("PC1: ", pcoaA1, "%", sep = ""),
y = paste("PC2: ", pcoaA2, "%", sep = ""),
colour = "Salt",
fill = "Depth (cm)",
shape = "Site") +
scale_colour_manual(values = c("blue", "red", "blue", "red", "blue", "red",
"blue", "red", "blue", "red")) +
scale_fill_manual(values = c("black", "white")) +
scale_shape_manual(values = c(21, 22, 23, 24)) +
guides(shape = guide_legend(order = 1,),
colour = guide_legend(order = 2),
fill = guide_legend(override.aes = list(shape = c(16, 1)), order = 3)) +
theme_bw() +
ggtitle("(a) Combined") +
theme(legend.position = "none",
legend.spacing.y = unit(0.1, "cm"),
legend.margin = margin(0.25, 0, 0, -0.1, unit = "cm"),
axis.title = element_text(size = 10),
axis.text = element_text(size = 10),
plot.title = element_text(vjust = -0.5, size = 12),
plot.margin = margin(0,0,0,10, "pt")) +
geom_segment(data = vec.df,
aes(x = 0, xend = Dim1, y = 0, yend = Dim2),
arrow = arrow(length = unit(0.35, "cm")),
colour = "gray", alpha = 0.5,
inherit.aes = FALSE) +
geom_text(data = vec.df,
aes(x = Dim1, y = Dim2, label = shortnames),
size = 2, color = "black")
g
# Make other PCoAs individually
sf <- filter_data(frol,
filter_cat = "Estuary",
keep_vals = "SF")
bc_sf <- calc_dm(sf$data_loaded)
env_sf <- sf$map_loaded %>%
dplyr::select(CH4_ug_m2_h, CO2_ug_m2_h,
Salinity_ppt_all, SO4_mgL, DOC_mgL, Fe_mgL, Mn_mgL, Cu_mgL, Zn_mgL,
sed_pH, sed_NH4_mgL, sed_NO3_mgL, sed_PO4_mgL, sed_Cl_mgL, sed_SO4_mgL,
sed_per_C, sed_per_N, sed_CN, sed_Bulk_dens,
sed_Fe_mgL, sed_Mn_mgL, sed_Cu_mgL, sed_Zn_mgL)
env_nona_sf <- na.omit(env_sf) # n = 30 (just D2)
pcoa_sf <- cmdscale(bc_sf, k = nrow(sf$map_loaded) - 1, eig = T)
set.seed(100)
ef_sf <- envfit(pcoa_sf, env_sf, permutations = 999, na.rm = TRUE)
ef_sf
ordiplot(pcoa_sf)
plot(ef_sf, p.max = 0.05, cex = 0.5)
manual_factor_sf <- 0.3
vec.df_sf <- as.data.frame(ef_sf$vectors$arrows*sqrt(ef_sf$vectors$r)) %>%
mutate(Dim1 = Dim1 * manual_factor_sf,
Dim2 = Dim2 * manual_factor_sf) %>%
mutate(variables = rownames(.)) %>%
filter(ef_sf$vectors$pvals < 0.05) %>%
filter(variables != "sed_Cl_mgL") %>%
mutate(shortnames = c("CH4", "CO2", "Salinity", "DOC", "Fe", "Mn",
"Zn", "sed_pH", "sed_NH4", "sed_NO3", "sed_PO4", "C",
"N", "C:N", "BD", "sed_Fe", "sed_Mn", "sed_Cu", "sed_Zn"))
pcoaA1 <- round((eigenvals(pcoa_sf)/sum(eigenvals(pcoa_sf)))[1]*100, digits = 1)
pcoaA2 <- round((eigenvals(pcoa_sf)/sum(eigenvals(pcoa_sf)))[2]*100, digits = 1)
sf$map_loaded$Axis01 <- scores(pcoa_sf)[,1]
sf$map_loaded$Axis02 <- scores(pcoa_sf)[,2]
micro.hulls <- ddply(sf$map_loaded, c("Salt"), find_hull)
g2 <- ggplot(sf$map_loaded, aes(Axis01, Axis02)) +
geom_polygon(data = micro.hulls,
aes(colour = Salt), fill = NA,
alpha = 0.1, show.legend = F) +
geom_point(size = 3, alpha = 0.5, aes(colour = Salt, fill = Depth), shape = 24) +
geom_segment(data = vec.df_sf,
aes(x = 0, xend = Dim1, y = 0, yend = Dim2),
arrow = arrow(length = unit(0.35, "cm")),
colour = "gray", alpha = 0.5,
inherit.aes = FALSE) +
geom_text(data = subset(vec.df_sf, shortnames != "CO2" & shortnames != "CH4"),
aes(x = Dim1, y = Dim2, label = shortnames),
size = 2, color = "black") +
geom_text(data = subset(vec.df_sf, shortnames == "CO2"),
aes(x = Dim1, y = Dim2 - 0.03, label = shortnames),
size = 2, color = "black") +
geom_text(data = subset(vec.df_sf, shortnames == "CH4"),
aes(x = Dim1 - 0.04, y = Dim2, label = shortnames),
size = 2, color = "black") +
labs(x = paste("PC1: ", pcoaA1, "%", sep = ""),
y = paste("PC2: ", pcoaA2, "%", sep = "")) +
scale_colour_manual(values = c("blue", "red")) +
scale_fill_manual(values = c("black", "white")) +
theme_bw() +
ggtitle("(b) SF") +
theme(legend.position = "none",
axis.title = element_text(size = 10),
axis.text = element_text(size = 10),
plot.title = element_text(vjust = -0.5, size = 12),
plot.margin = margin(0,0,0,10, "pt"))
g2
de <- filter_data(frol,
filter_cat = "Estuary",
keep_vals = "Delaware")
detra <- filter_data(de,
filter_cat = "Site",
keep_vals = "Soil mesocosm")
bc_detra <- calc_dm(detra$data_loaded)
env_detra <- detra$map_loaded %>%
dplyr::select(CH4_ug_m2_h, N2O_ug_m2_h,
Salinity_ppt_all,
NH4_mgL, PO4_mgL, Cl_mgL, SO4_mgL,
Fe_mgL, Porosity, Acetate_mgL, TotalVFA_uM, SR_umol_cm3_d, AMG_umol_cm3_d)
env_nona_detra <- na.omit(env_detra) # n = 8
pcoa_detra <- cmdscale(bc_detra, k = nrow(detra$map_loaded) - 1, eig = T)
set.seed(100)
ef_detra <- envfit(pcoa_detra, env_detra, permutations = 999, na.rm = TRUE)
ef_detra
ordiplot(pcoa_detra)
plot(ef_detra, p.max = 0.05, cex = 0.5)
manual_factor_detra <- 0.64
vec.df_detra <- as.data.frame(ef_detra$vectors$arrows*sqrt(ef_detra$vectors$r)) %>%
mutate(Dim1 = Dim1 * manual_factor_detra,
Dim2 = Dim2 * manual_factor_detra) %>%
mutate(variables = rownames(.)) %>%
filter(ef_detra$vectors$pvals < 0.05) %>%
filter(variables != "Cl_mgL") %>%
mutate(shortnames = c("Salinity", "SR"))
pcoaA1 <- round((eigenvals(pcoa_detra)/sum(eigenvals(pcoa_detra)))[1]*100, digits = 1)
pcoaA2 <- round((eigenvals(pcoa_detra)/sum(eigenvals(pcoa_detra)))[2]*100, digits = 1)
detra$map_loaded$Axis01 <- scores(pcoa_detra)[,1]
detra$map_loaded$Axis02 <- scores(pcoa_detra)[,2]
micro.hulls <- ddply(detra$map_loaded, c("Salt"), find_hull)
g3 <- ggplot(detra$map_loaded, aes(Axis01, Axis02)) +
geom_polygon(data = micro.hulls,
aes(colour = Salt), fill = NA,
alpha = 0.1, show.legend = F) +
geom_point(size = 3, alpha = 0.5, aes(colour = Salt, fill = Depth), shape = 23,
show.legend = F) +
geom_segment(data = vec.df_detra,
aes(x = 0, xend = Dim1, y = 0, yend = Dim2),
arrow = arrow(length = unit(0.35, "cm")),
colour = "gray", alpha = 0.5,
inherit.aes = FALSE) +
geom_text(data = vec.df_detra,
aes(x = Dim1, y = Dim2, label = shortnames),
size = 2, color = "black") +
labs(x = paste("PC1: ", pcoaA1, "%", sep = ""),
y = paste("PC2: ", pcoaA2, "%", sep = "")) +
scale_colour_manual(values = c("blue", "red")) +
scale_fill_manual(values = c("black", "white")) +
theme_bw() +
ggtitle("(c) Delaware (field exp.)") +
theme(legend.position = "none",
axis.title = element_text(size = 10),
axis.text = element_text(size = 10),
plot.title = element_text(vjust = -0.5, size = 12),
plot.margin = margin(0,0,0,10, "pt"))
g3
sc <- filter_data(frol,
filter_cat = "Estuary",
keep_vals = "Waccamaw")
bc_sc <- calc_dm(sc$data_loaded)
env_sc <- sc$map_loaded %>%
dplyr::select(CH4_ug_m2_h, CO2_ug_m2_h, CH4_pw_air_ppmv,
CH4_pot_umol_gdw_h, CO2_pot_umol_gdw_h,
N2_umol_m2_h,	SOD_umol_m2_h, NO3_umol_m2_h,	NH4_umol_m2_h, SRP_umol_m2_h, DON_umol_m2_h,
Conductivity_uS_cm, Salinity_ppt_all, DIC_mgL,
sed_per_C, sed_per_N, sed_CN, sed_per_org, sed_per_inorg, pH)
env_nona_sc <- na.omit(env_sc) # n = 15
pcoa_sc <- cmdscale(bc_sc, k = nrow(sc$map_loaded) - 1, eig = T)
set.seed(100)
ef_sc <- envfit(pcoa_sc, env_sc, permutations = 999, na.rm = TRUE)
ef_sc
ordiplot(pcoa_sc)
plot(ef_sc, p.max = 0.05, cex = 0.5)
manual_factor_sc <- 0.2
vec.df_sc <- as.data.frame(ef_sc$vectors$arrows*sqrt(ef_sc$vectors$r)) %>%
mutate(Dim1 = Dim1 * manual_factor_sc,
Dim2 = Dim2 * manual_factor_sc) %>%
mutate(variables = rownames(.)) %>%
filter(ef_sc$vectors$pvals < 0.05) %>%
filter(variables != "Conductivity_uS_cm") %>%
mutate(shortnames = c("CO2", "N2", "SOD", "Salinity", "N", "C:N", "pH"))
pcoaA1 <- round((eigenvals(pcoa_sc)/sum(eigenvals(pcoa_sc)))[1]*100, digits = 1)
pcoaA2 <- round((eigenvals(pcoa_sc)/sum(eigenvals(pcoa_sc)))[2]*100, digits = 1)
sc$map_loaded$Axis01 <- scores(pcoa_sc)[,1]
sc$map_loaded$Axis02 <- scores(pcoa_sc)[,2]
micro.hulls <- ddply(sc$map_loaded, c("Salt"), find_hull)
g4 <- ggplot(sc$map_loaded, aes(Axis01, Axis02)) +
geom_polygon(data = micro.hulls,
aes(colour = Salt), fill = NA,
alpha = 0.1, show.legend = F) +
geom_point(size = 3, alpha = 0.5, aes(colour = Salt, fill = Depth), shape = 21,
show.legend = F) +
geom_segment(data = vec.df_sc,
aes(x = 0, xend = Dim1, y = 0, yend = Dim2),
arrow = arrow(length = unit(0.35, "cm")),
colour = "gray", alpha = 0.5,
inherit.aes = FALSE) +
geom_text(data = vec.df_sc,
aes(x = Dim1, y = Dim2, label = shortnames),
size = 2, color = "black") +
labs(x = paste("PC1: ", pcoaA1, "%", sep = ""),
y = paste("PC2: ", pcoaA2, "%", sep = "")) +
scale_colour_manual(values = c("blue", "red")) +
scale_fill_manual(values = c("black", "white")) +
theme_bw() +
ggtitle("(d) Waccamaw (field exp.)") +
theme(legend.position = "none",
axis.title = element_text(size = 10),
axis.text = element_text(size = 10),
plot.title = element_text(vjust = -0.5, size = 12),
plot.margin = margin(0,0,0,10, "pt"))
g4
# Note: in initial analysis, thought there was error, but looks like maybe there isn't
# Just not clear separation, no hard evidence of any sample label error
deinc <- filter_data(de,
filter_cat = "Site",
keep_vals = "Soil incubation")
bc_deinc <- calc_dm(deinc$data_loaded)
env_deinc <- deinc$map_loaded %>%
dplyr::select(Salinity_ppt_all,
NH4_mgL, PO4_mgL, Cl_mgL, SO4_mgL,
Fe_mgL, Porosity, Acetate_mgL, TotalVFA_uM, SR_umol_cm3_d, AMG_umol_cm3_d)
env_nona_deinc <- na.omit(env_deinc) # n = 8
pcoa_deinc <- cmdscale(bc_deinc, k = nrow(deinc$map_loaded) - 1, eig = T)
set.seed(100)
ef_deinc <- envfit(pcoa_deinc, env_deinc, permutations = 999, na.rm = TRUE)
ef_deinc
ordiplot(pcoa_deinc)
plot(ef_deinc, p.max = 0.05, cex = 0.5)
ef_deinc <- envfit(pcoa_deinc, env_deinc, permutations = 999, na.rm = TRUE)
pcoa_deinc <- cmdscale(bc_deinc, k = nrow(deinc$map_loaded) - 1, eig = T)
View(env_deinc)
env_deinc <- deinc$map_loaded %>%
dplyr::select(Salinity_ppt_all,
NH4_mgL, PO4_mgL, Cl_mgL, SO4_mgL,
Fe_mgL, Porosity, Acetate_mgL, TotalVFA_uM, SR_umol_cm3_d, AMG_umol_cm3_d)
View(env_deinc)
View(deinc$map_loaded)
comm_nona_sf <- as.data.frame(t(sf$data_loaded)) %>%
filter(rownames(.) %in% rownames(env_nona_sf))
mod0 <- rda(comm_nona_sf ~ 1, env_nona_sf)  # Model with intercept only
mod1 <- rda(comm_nona_sf ~ ., env_nona_sf)  # Model with all explanatory variables
mod <- ordistep(mod0, scope = formula(mod1))
mod
mod$anova #
comm_nona_detra <- as.data.frame(t(detra$data_loaded)) %>%
filter(rownames(.) %in% rownames(env_nona_detra))
View(env_nona_detra)
mod0 <- rda(comm_nona_detra ~ 1, env_nona_detra)  # Model with intercept only
mod1 <- rda(comm_nona_detra ~ ., env_nona_detra)  # Model with all explanatory variables
mod <- ordistep(mod0, scope = formula(mod1))
mod
mod$anova # BD, sed_Zn, sed_pH, sed_Cl, sed_CN, sed_Mn, SO4
comm_nona_sc <- as.data.frame(t(sc$data_loaded)) %>%
filter(rownames(.) %in% rownames(env_nona_sc))
mod0 <- rda(comm_nona_sc ~ 1, env_nona_sc)  # Model with intercept only
mod1 <- rda(comm_nona_sc ~ ., env_nona_sc)  # Model with all explanatory variables
mod <- ordistep(mod0, scope = formula(mod1))
mod
mod$anova # NH4
comm_nona_nc <- as.data.frame(t(nc$data_loaded)) %>%
filter(rownames(.) %in% rownames(env_nona_nc))
nc <- filter_data(frol,
filter_cat = "Estuary",
keep_vals = "Alligator")
bc_nc <- calc_dm(nc$data_loaded)
env_nc <- nc$map_loaded %>%
dplyr::select(CH4_ug_m2_h, CO2_ug_m2_h, N2O_ug_m2_h, Salinity_ppt_all,
TOC_mgL, TN_mgL, NH4_mgL, PO4_mgL, Cl_mgL, SO4_mgL, Br_mgL, NO3_mgL,
DIN_mgL, DON_mgL, pH)
env_nona_nc <- na.omit(env_nc) # n = 8
pcoa_nc <- cmdscale(bc_nc, k = nrow(nc$map_loaded) - 1, eig = T)
set.seed(100)
ef_nc <- envfit(pcoa_nc, env_nc, permutations = 999, na.rm = TRUE)
ef_nc
ordiplot(pcoa_nc)
plot(ef_nc, p.max = 0.05, cex = 0.5)
manual_factor_nc <- 0.33
vec.df_nc <- as.data.frame(ef_nc$vectors$arrows*sqrt(ef_nc$vectors$r)) %>%
mutate(Dim1 = Dim1 * manual_factor_nc,
Dim2 = Dim2 * manual_factor_nc) %>%
mutate(variables = rownames(.)) %>%
filter(ef_nc$vectors$pvals < 0.05) %>%
filter(variables != "Cl_mgL") %>%
mutate(shortnames = c("CH4", "CO2", "N2O", "Salinity", "NH4", "Br"))
pcoaA1 <- round((eigenvals(pcoa_nc)/sum(eigenvals(pcoa_nc)))[1]*100, digits = 1)
pcoaA2 <- round((eigenvals(pcoa_nc)/sum(eigenvals(pcoa_nc)))[2]*100, digits = 1)
nc$map_loaded$Axis01 <- scores(pcoa_nc)[,1]
nc$map_loaded$Axis02 <- scores(pcoa_nc)[,2]
micro.hulls <- ddply(nc$map_loaded, c("Salt"), find_hull)
g6 <- ggplot(nc$map_loaded, aes(Axis01, Axis02)) +
geom_polygon(data = micro.hulls,
aes(colour = Salt), fill = NA,
alpha = 0.1, show.legend = F) +
geom_point(size = 3, alpha = 0.5, aes(colour = Salt, fill = Depth), shape = 22,
show.legend = F) +
geom_segment(data = vec.df_nc,
aes(x = 0, xend = Dim1, y = 0, yend = Dim2),
arrow = arrow(length = unit(0.35, "cm")),
colour = "gray", alpha = 0.5,
inherit.aes = FALSE) +
geom_text(data = vec.df_nc,
aes(x = Dim1, y = Dim2, label = shortnames),
size = 2, color = "black") +
labs(x = paste("PC1: ", pcoaA1, "%", sep = ""),
y = paste("PC2: ", pcoaA2, "%", sep = "")) +
scale_colour_manual(values = c("blue", "red")) +
scale_fill_manual(values = c("black", "white")) +
theme_bw() +
ggtitle("(f) Alligator (lab exp.)") +
theme(legend.position = "none",
axis.title = element_text(size = 10),
axis.text = element_text(size = 10),
plot.title = element_text(vjust = -0.5, size = 12),
plot.margin = margin(0,0,0,10, "pt"))
g6
comm_nona_nc <- as.data.frame(t(nc$data_loaded)) %>%
filter(rownames(.) %in% rownames(env_nona_nc))
mod0 <- rda(comm_nona_nc ~ 1, env_nona_nc)  # Model with intercept only
mod1 <- rda(comm_nona_nc ~ ., env_nona_nc)  # Model with all explanatory variables
mod <- ordistep(mod0, scope = formula(mod1))
mod
mod$anova # Can't do yet, no data
#### _Taxa ####
cliffplot_taxa_bars(input = frol, level = 1, variable = "EstSalt")
cliffplot_taxa_bars(input = frol, level = 2, variable = "EstSalt")
cliffplot_taxa_bars(input = frol, level = 3, variable = "EstSalt")
# Phyla, all samples
tax_sum_phyla <- summarize_taxonomy(input = frol, level = 2, report_higher_tax = F)
View(tax_sum_phyla)
frol$map_loaded$sampleID <- rownames(frol$map_loaded)
barsP <- plot_taxa_bars(tax_sum_phyla,
frol$map_loaded,
"sampleID",
num_taxa = 12,
data_only = TRUE) %>%
mutate(taxon = fct_rev(taxon)) %>%
left_join(., frol$map_loaded, by = c("group_by" = "sampleID"))
View(barsP)
topphy <- barsP %>%
group_by(taxon) %>%
summarise(mean = mean(mean_value)) %>%
arrange(mean)
View(topphy)
topphy <- barsP %>%
group_by(taxon) %>%
summarise(mean = mean(mean_value)) %>%
arrange(-mean)
topphy <- barsP %>%
group_by(taxon) %>%
summarise(mean = mean(mean_value)) %>%
filter(taxon != "Other") %>%
arrange(-mean)
View(topphy)
# Guilds all samples
tax_sum_guilds <- summarize_taxonomy(input = frol, level = 9, report_higher_tax = F)
frol$map_loaded$sampleID <- rownames(frol$map_loaded)
barsG <- plot_taxa_bars(tax_sum_guilds,
frol$map_loaded,
"sampleID",
num_taxa = 20,
data_only = TRUE) %>%
filter(taxon != "NA") %>%
droplevels() %>%
mutate(taxon = factor(taxon,
levels = Guild_cols$Guild)) %>%
left_join(., frol$map_loaded, by = c("group_by" = "sampleID"))
tallest_bar <- barsG %>%
group_by(group_by) %>%
summarise(sum = sum(mean_value))
topgui <- barsG %>%
group_by(taxon) %>%
summarise(mean = mean(mean_value)) %>%
arrange(-mean)
View(topgui)
View(tax_sum_guilds)
# Ordistep
comm_nona <- as.data.frame(t(frol$data_loaded)) %>%
filter(rownames(.) %in% rownames(env_nona))
mod0 <- rda(comm_nona ~ 1, env_nona)  # Model with intercept only
mod1 <- rda(comm_nona ~ ., env_nona)  # Model with all explanatory variables
mod <- ordistep(mod0, scope = formula(mod1))
mod
mod$anova #
View(topgui)
